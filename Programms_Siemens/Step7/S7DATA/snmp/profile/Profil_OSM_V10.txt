;----------------------------------------------------------------------------------------------------
;-- SIEMENS AG   Profil for OPC SNMP Server SIMATIC NET
;-- Profil_OSM_V10.txt
;-- Version: 1.5
;-- Date: 23.10.2006
;-- Comment:
;----------------------------------------------------------------------------------------------------

;DO NOT CHANGE lines between BEGIN and END
;BEGIN
;MODULE=BRIDGE-MIB=C:\Programme\SIEMENS\SIMATIC.NCM\S7data\Snmp\Mib\BRIDGE-MIB.mib
;MODULE=IANAifType-MIB=C:\Programme\SIEMENS\SIMATIC.NCM\S7data\Snmp\Mib\IANAifType-MIB.mib
;MODULE=IF-MIB=C:\Programme\SIEMENS\SIMATIC.NCM\S7data\Snmp\Mib\IF-MIB.mib
;MODULE=RFC-1212=C:\Programme\SIEMENS\SIMATIC.NCM\S7data\Snmp\Mib\RFC-1212.mib
;MODULE=RFC-1215=C:\Programme\SIEMENS\SIMATIC.NCM\S7data\Snmp\Mib\RFC-1215.mib
;MODULE=RFC1155-SMI=C:\Programme\SIEMENS\SIMATIC.NCM\S7data\Snmp\Mib\RFC1155-SMI.mib
;MODULE=RFC1213-MIB=C:\Programme\SIEMENS\SIMATIC.NCM\S7data\Snmp\Mib\RFC1213-MIB.mib
;MODULE=RMON-MIB=C:\Programme\SIEMENS\SIMATIC.NCM\S7data\Snmp\Mib\RMON-MIB.mib
;MODULE=SN-OSM-PRIV-MIB=C:\Programme\SIEMENS\SIMATIC.NCM\S7data\Snmp\Mib\SN-OSM-PRIV-MIB.mib
;MODULE=SNMPv2-MIB-v1=C:\Programme\SIEMENS\SIMATIC.NCM\S7data\Snmp\Mib\SNMPv2-MIB-v1.mib
;MODULE=SNMPv2-SMI-v1=C:\Programme\SIEMENS\SIMATIC.NCM\S7data\Snmp\Mib\SNMPv2-SMI-v1.mib
;MODULE=SNMPv2-TC-v1=C:\Programme\SIEMENS\SIMATIC.NCM\S7data\Snmp\Mib\SNMPv2-TC-v1.mib
;END


[ICMP]
SNMPItem=icmpInAddrMaskReps|R|.1.3.6.1.2.1.5.13.0|41|The number of ICMP Address Mask Reply messages received.
SNMPItem=icmpInAddrMasks|R|.1.3.6.1.2.1.5.12.0|41|The number of ICMP Address Mask Request messages received.
SNMPItem=icmpInDestUnreachs|R|.1.3.6.1.2.1.5.3.0|41|The number of ICMP Destination Unreachable messages received.
SNMPItem=icmpInEchoReps|R|.1.3.6.1.2.1.5.9.0|41|The number of ICMP Echo Reply messages received.
SNMPItem=icmpInEchos|R|.1.3.6.1.2.1.5.8.0|41|The number of ICMP Echo (request) messages received.
SNMPItem=icmpInErrors|R|.1.3.6.1.2.1.5.2.0|41|The number of ICMP messages which the entity received but determined as having ICMP-specific errors (bad ICMP checksums, bad length, etc.).
SNMPItem=icmpInMsgs|R|.1.3.6.1.2.1.5.1.0|41|The total number of ICMP messages which the entity received. Note that this counter includes all those counted by icmpInErrors.
SNMPItem=icmpInParmProbs|R|.1.3.6.1.2.1.5.5.0|41|The number of ICMP Parameter Problem messages received.
SNMPItem=icmpInRedirects|R|.1.3.6.1.2.1.5.7.0|41|The number of ICMP Redirect messages received.
SNMPItem=icmpInSrcQuenchs|R|.1.3.6.1.2.1.5.6.0|41|The number of ICMP Source Quench messages received.
SNMPItem=icmpInTimeExcds|R|.1.3.6.1.2.1.5.4.0|41|The number of ICMP Time Exceeded messages received.
SNMPItem=icmpInTimestampReps|R|.1.3.6.1.2.1.5.11.0|41|The number of ICMP Timestamp Reply messages received.
SNMPItem=icmpInTimestamps|R|.1.3.6.1.2.1.5.10.0|41|The number of ICMP Timestamp (request) messages received.
SNMPItem=icmpOutAddrMaskReps|R|.1.3.6.1.2.1.5.26.0|41|The number of ICMP Address Mask Reply messages sent.
SNMPItem=icmpOutAddrMasks|R|.1.3.6.1.2.1.5.25.0|41|The number of ICMP Address Mask Request messages sent.
SNMPItem=icmpOutDestUnreachs|R|.1.3.6.1.2.1.5.16.0|41|The number of ICMP Destination Unreachable messages sent.
SNMPItem=icmpOutEchoReps|R|.1.3.6.1.2.1.5.22.0|41|The number of ICMP Echo Reply messages sent.
SNMPItem=icmpOutEchos|R|.1.3.6.1.2.1.5.21.0|41|The number of ICMP Echo (request) messages sent.
SNMPItem=icmpOutErrors|R|.1.3.6.1.2.1.5.15.0|41|The number of ICMP messages which this entity did not send due to problems discovered within ICMP such as a lack of buffers. This value should not include errors discovered outside the ICMP layer such as the inability of IP to route the resultant datagram. In some implementations there may be no types of error which contribute to this counter's value.
SNMPItem=icmpOutMsgs|R|.1.3.6.1.2.1.5.14.0|41|The total number of ICMP messages which this entity attempted to send. Note that this counter includes all those counted by icmpOutErrors.
SNMPItem=icmpOutParmProbs|R|.1.3.6.1.2.1.5.18.0|41|The number of ICMP Parameter Problem messages sent.
SNMPItem=icmpOutRedirects|R|.1.3.6.1.2.1.5.20.0|41|The number of ICMP Redirect messages sent. For a host, this object will always be zero, since hosts do not send redirects.
SNMPItem=icmpOutSrcQuenchs|R|.1.3.6.1.2.1.5.19.0|41|The number of ICMP Source Quench messages sent.
SNMPItem=icmpOutTimeExcds|R|.1.3.6.1.2.1.5.17.0|41|The number of ICMP Time Exceeded messages sent.
SNMPItem=icmpOutTimestampReps|R|.1.3.6.1.2.1.5.24.0|41|The number of ICMP Timestamp Reply messages sent.
SNMPItem=icmpOutTimestamps|R|.1.3.6.1.2.1.5.23.0|41|The number of ICMP Timestamp (request) messages sent.

[IP]
SNMPItem=ipDefaultTTL|RW|.1.3.6.1.2.1.4.2.0|02|The default value inserted into the Time-To-Live field of the IP header of datagrams originated at this entity, whenever a TTL value is not supplied by the transport layer protocol.
SNMPItem=ipForwDatagrams|R|.1.3.6.1.2.1.4.6.0|41|The number of input datagrams for which this entity was not their final IP destination, as a result of which an attempt was made to find a route to forward them to that final destination. In entities which do not act as IP Gateways, this counter will include only those packets which were Source-Routed via this entity, and the Source- Route option processing was successful.
SNMPItem=ipForwarding|RW|.1.3.6.1.2.1.4.1.0|02|The indication of whether this entity is acting as an IP gateway in respect to the forwarding of datagrams received by, but not addressed to, this entity. IP gateways forward datagrams. IP hosts do not (except those source-routed via the host). Note that for some managed nodes, this object may take on only a subset of the values possible. Accordingly, it is appropriate for an agent to return a `badValue' response if a management station attempts to change this object to an inappropriate value.
SNMPItem=ipFragCreates|R|.1.3.6.1.2.1.4.19.0|41|The number of IP datagram fragments that have been generated as a result of fragmentation at this entity.
SNMPItem=ipFragFails|R|.1.3.6.1.2.1.4.18.0|41|The number of IP datagrams that have been discarded because they needed to be fragmented at this entity but could not be, e.g., because their Don't Fragment flag was set.
SNMPItem=ipFragOKs|R|.1.3.6.1.2.1.4.17.0|41|The number of IP datagrams that have been successfully fragmented at this entity.
SNMPItem=ipInAddrErrors|R|.1.3.6.1.2.1.4.5.0|41|The number of input datagrams discarded because the IP address in their IP header's destination field was not a valid address to be received at this entity. This count includes invalid addresses (e.g., 0.0.0.0) and addresses of unsupported Classes (e.g., Class E). For entities which are not IP Gateways and therefore do not forward datagrams, this counter includes datagrams discarded because the destination address was not a local address.
SNMPItem=ipInDelivers|R|.1.3.6.1.2.1.4.9.0|41|The total number of input datagrams successfully delivered to IP user-protocols (including ICMP).
SNMPItem=ipInDiscards|R|.1.3.6.1.2.1.4.8.0|41|The number of input IP datagrams for which no problems were encountered to prevent their continued processing, but which were discarded (e.g., for lack of buffer space). Note that this counter does not include any datagrams discarded while awaiting re-assembly.
SNMPItem=ipInHdrErrors|R|.1.3.6.1.2.1.4.4.0|41|The number of input datagrams discarded due to errors in their IP headers, including bad checksums, version number mismatch, other format errors, time-to-live exceeded, errors discovered in processing their IP options, etc.
SNMPItem=ipInReceives|R|.1.3.6.1.2.1.4.3.0|41|The total number of input datagrams received from interfaces, including those received in error.
SNMPItem=ipInUnknownProtos|R|.1.3.6.1.2.1.4.7.0|41|The number of locally-addressed datagrams received successfully but discarded because of an unknown or unsupported protocol.
SNMPItem=ipOutDiscards|R|.1.3.6.1.2.1.4.11.0|41|The number of output IP datagrams for which no problem was encountered to prevent their transmission to their destination, but which were discarded (e.g., for lack of buffer space). Note that this counter would include datagrams counted in ipForwDatagrams if any such packets met this (discretionary) discard criterion.
SNMPItem=ipOutNoRoutes|R|.1.3.6.1.2.1.4.12.0|41|The number of IP datagrams discarded because no route could be found to transmit them to their destination. Note that this counter includes any packets counted in ipForwDatagrams which meet this `no-route' criterion. Note that this includes any datagarms which a host cannot route because all of its default gateways are down.
SNMPItem=ipOutRequests|R|.1.3.6.1.2.1.4.10.0|41|The total number of IP datagrams which local IP user-protocols (including ICMP) supplied to IP in requests for transmission. Note that this counter does not include any datagrams counted in ipForwDatagrams.
SNMPItem=ipReasmFails|R|.1.3.6.1.2.1.4.16.0|41|The number of failures detected by the IP re- assembly algorithm (for whatever reason: timed out, errors, etc). Note that this is not necessarily a count of discarded IP fragments since some algorithms (notably the algorithm in RFC 815) can lose track of the number of fragments by combining them as they are received.
SNMPItem=ipReasmOKs|R|.1.3.6.1.2.1.4.15.0|41|The number of IP datagrams successfully re- assembled.
SNMPItem=ipReasmReqds|R|.1.3.6.1.2.1.4.14.0|41|The number of IP fragments received which needed to be reassembled at this entity.
SNMPItem=ipReasmTimeout|R|.1.3.6.1.2.1.4.13.0|02|The maximum number of seconds which received fragments are held while they are awaiting reassembly at this entity.
SNMPItem=ipRoutingDiscards|R|.1.3.6.1.2.1.4.23.0|41|The number of routing entries which were chosen to be discarded even though they are valid. One possible reason for discarding such an entry could be to free-up buffer space for other routing entries.

[Interfaces]
SNMPItem=ifNumber|R|.1.3.6.1.2.1.2.1.0|02|The number of network interfaces (regardless of their current state) present on this system.
SNMPItem=ifAdminStatus.1|RW|.1.3.6.1.2.1.2.2.1.7.1|02|The desired state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifAdminStatus.2|RW|.1.3.6.1.2.1.2.2.1.7.2|02|The desired state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifAdminStatus.3|RW|.1.3.6.1.2.1.2.2.1.7.3|02|The desired state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifAdminStatus.4|RW|.1.3.6.1.2.1.2.2.1.7.4|02|The desired state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifAdminStatus.5|RW|.1.3.6.1.2.1.2.2.1.7.5|02|The desired state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifAdminStatus.6|RW|.1.3.6.1.2.1.2.2.1.7.6|02|The desired state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifAdminStatus.7|RW|.1.3.6.1.2.1.2.2.1.7.7|02|The desired state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifAdminStatus.8|RW|.1.3.6.1.2.1.2.2.1.7.8|02|The desired state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifDescr.1|R|.1.3.6.1.2.1.2.2.1.2.1|04|A textual string containing information about the interface. This string should include the name of the manufacturer, the product name and the version of the hardware interface.
SNMPItem=ifDescr.2|R|.1.3.6.1.2.1.2.2.1.2.2|04|A textual string containing information about the interface. This string should include the name of the manufacturer, the product name and the version of the hardware interface.
SNMPItem=ifDescr.3|R|.1.3.6.1.2.1.2.2.1.2.3|04|A textual string containing information about the interface. This string should include the name of the manufacturer, the product name and the version of the hardware interface.
SNMPItem=ifDescr.4|R|.1.3.6.1.2.1.2.2.1.2.4|04|A textual string containing information about the interface. This string should include the name of the manufacturer, the product name and the version of the hardware interface.
SNMPItem=ifDescr.5|R|.1.3.6.1.2.1.2.2.1.2.5|04|A textual string containing information about the interface. This string should include the name of the manufacturer, the product name and the version of the hardware interface.
SNMPItem=ifDescr.6|R|.1.3.6.1.2.1.2.2.1.2.6|04|A textual string containing information about the interface. This string should include the name of the manufacturer, the product name and the version of the hardware interface.
SNMPItem=ifDescr.7|R|.1.3.6.1.2.1.2.2.1.2.7|04|A textual string containing information about the interface. This string should include the name of the manufacturer, the product name and the version of the hardware interface.
SNMPItem=ifDescr.8|R|.1.3.6.1.2.1.2.2.1.2.8|04|A textual string containing information about the interface. This string should include the name of the manufacturer, the product name and the version of the hardware interface.
SNMPItem=ifInDiscards.1|R|.1.3.6.1.2.1.2.2.1.13.1|41|The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable to a higher-layer protocol. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifInDiscards.2|R|.1.3.6.1.2.1.2.2.1.13.2|41|The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable to a higher-layer protocol. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifInDiscards.3|R|.1.3.6.1.2.1.2.2.1.13.3|41|The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable to a higher-layer protocol. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifInDiscards.4|R|.1.3.6.1.2.1.2.2.1.13.4|41|The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable to a higher-layer protocol. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifInDiscards.5|R|.1.3.6.1.2.1.2.2.1.13.5|41|The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable to a higher-layer protocol. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifInDiscards.6|R|.1.3.6.1.2.1.2.2.1.13.6|41|The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable to a higher-layer protocol. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifInDiscards.7|R|.1.3.6.1.2.1.2.2.1.13.7|41|The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable to a higher-layer protocol. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifInDiscards.8|R|.1.3.6.1.2.1.2.2.1.13.8|41|The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable to a higher-layer protocol. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifInErrors.1|R|.1.3.6.1.2.1.2.2.1.14.1|41|The number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.
SNMPItem=ifInErrors.2|R|.1.3.6.1.2.1.2.2.1.14.2|41|The number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.
SNMPItem=ifInErrors.3|R|.1.3.6.1.2.1.2.2.1.14.3|41|The number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.
SNMPItem=ifInErrors.4|R|.1.3.6.1.2.1.2.2.1.14.4|41|The number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.
SNMPItem=ifInErrors.5|R|.1.3.6.1.2.1.2.2.1.14.5|41|The number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.
SNMPItem=ifInErrors.6|R|.1.3.6.1.2.1.2.2.1.14.6|41|The number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.
SNMPItem=ifInErrors.7|R|.1.3.6.1.2.1.2.2.1.14.7|41|The number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.
SNMPItem=ifInErrors.8|R|.1.3.6.1.2.1.2.2.1.14.8|41|The number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.
SNMPItem=ifInNUcastPkts.1|R|.1.3.6.1.2.1.2.2.1.12.1|41|The number of non-unicast (i.e., subnetwork- broadcast or subnetwork-multicast) packets delivered to a higher-layer protocol.
SNMPItem=ifInNUcastPkts.2|R|.1.3.6.1.2.1.2.2.1.12.2|41|The number of non-unicast (i.e., subnetwork- broadcast or subnetwork-multicast) packets delivered to a higher-layer protocol.
SNMPItem=ifInNUcastPkts.3|R|.1.3.6.1.2.1.2.2.1.12.3|41|The number of non-unicast (i.e., subnetwork- broadcast or subnetwork-multicast) packets delivered to a higher-layer protocol.
SNMPItem=ifInNUcastPkts.4|R|.1.3.6.1.2.1.2.2.1.12.4|41|The number of non-unicast (i.e., subnetwork- broadcast or subnetwork-multicast) packets delivered to a higher-layer protocol.
SNMPItem=ifInNUcastPkts.5|R|.1.3.6.1.2.1.2.2.1.12.5|41|The number of non-unicast (i.e., subnetwork- broadcast or subnetwork-multicast) packets delivered to a higher-layer protocol.
SNMPItem=ifInNUcastPkts.6|R|.1.3.6.1.2.1.2.2.1.12.6|41|The number of non-unicast (i.e., subnetwork- broadcast or subnetwork-multicast) packets delivered to a higher-layer protocol.
SNMPItem=ifInNUcastPkts.7|R|.1.3.6.1.2.1.2.2.1.12.7|41|The number of non-unicast (i.e., subnetwork- broadcast or subnetwork-multicast) packets delivered to a higher-layer protocol.
SNMPItem=ifInNUcastPkts.8|R|.1.3.6.1.2.1.2.2.1.12.8|41|The number of non-unicast (i.e., subnetwork- broadcast or subnetwork-multicast) packets delivered to a higher-layer protocol.
SNMPItem=ifInOctets.1|R|.1.3.6.1.2.1.2.2.1.10.1|41|The total number of octets received on the interface, including framing characters.
SNMPItem=ifInOctets.2|R|.1.3.6.1.2.1.2.2.1.10.2|41|The total number of octets received on the interface, including framing characters.
SNMPItem=ifInOctets.3|R|.1.3.6.1.2.1.2.2.1.10.3|41|The total number of octets received on the interface, including framing characters.
SNMPItem=ifInOctets.4|R|.1.3.6.1.2.1.2.2.1.10.4|41|The total number of octets received on the interface, including framing characters.
SNMPItem=ifInOctets.5|R|.1.3.6.1.2.1.2.2.1.10.5|41|The total number of octets received on the interface, including framing characters.
SNMPItem=ifInOctets.6|R|.1.3.6.1.2.1.2.2.1.10.6|41|The total number of octets received on the interface, including framing characters.
SNMPItem=ifInOctets.7|R|.1.3.6.1.2.1.2.2.1.10.7|41|The total number of octets received on the interface, including framing characters.
SNMPItem=ifInOctets.8|R|.1.3.6.1.2.1.2.2.1.10.8|41|The total number of octets received on the interface, including framing characters.
SNMPItem=ifInUcastPkts.1|R|.1.3.6.1.2.1.2.2.1.11.1|41|The number of subnetwork-unicast packets delivered to a higher-layer protocol.
SNMPItem=ifInUcastPkts.2|R|.1.3.6.1.2.1.2.2.1.11.2|41|The number of subnetwork-unicast packets delivered to a higher-layer protocol.
SNMPItem=ifInUcastPkts.3|R|.1.3.6.1.2.1.2.2.1.11.3|41|The number of subnetwork-unicast packets delivered to a higher-layer protocol.
SNMPItem=ifInUcastPkts.4|R|.1.3.6.1.2.1.2.2.1.11.4|41|The number of subnetwork-unicast packets delivered to a higher-layer protocol.
SNMPItem=ifInUcastPkts.5|R|.1.3.6.1.2.1.2.2.1.11.5|41|The number of subnetwork-unicast packets delivered to a higher-layer protocol.
SNMPItem=ifInUcastPkts.6|R|.1.3.6.1.2.1.2.2.1.11.6|41|The number of subnetwork-unicast packets delivered to a higher-layer protocol.
SNMPItem=ifInUcastPkts.7|R|.1.3.6.1.2.1.2.2.1.11.7|41|The number of subnetwork-unicast packets delivered to a higher-layer protocol.
SNMPItem=ifInUcastPkts.8|R|.1.3.6.1.2.1.2.2.1.11.8|41|The number of subnetwork-unicast packets delivered to a higher-layer protocol.
SNMPItem=ifInUnknownProtos.1|R|.1.3.6.1.2.1.2.2.1.15.1|41|The number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
SNMPItem=ifInUnknownProtos.2|R|.1.3.6.1.2.1.2.2.1.15.2|41|The number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
SNMPItem=ifInUnknownProtos.3|R|.1.3.6.1.2.1.2.2.1.15.3|41|The number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
SNMPItem=ifInUnknownProtos.4|R|.1.3.6.1.2.1.2.2.1.15.4|41|The number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
SNMPItem=ifInUnknownProtos.5|R|.1.3.6.1.2.1.2.2.1.15.5|41|The number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
SNMPItem=ifInUnknownProtos.6|R|.1.3.6.1.2.1.2.2.1.15.6|41|The number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
SNMPItem=ifInUnknownProtos.7|R|.1.3.6.1.2.1.2.2.1.15.7|41|The number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
SNMPItem=ifInUnknownProtos.8|R|.1.3.6.1.2.1.2.2.1.15.8|41|The number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
SNMPItem=ifIndex.1|R|.1.3.6.1.2.1.2.2.1.1.1|02|A unique value for each interface. Its value ranges between 1 and the value of ifNumber. The value for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.
SNMPItem=ifIndex.2|R|.1.3.6.1.2.1.2.2.1.1.2|02|A unique value for each interface. Its value ranges between 1 and the value of ifNumber. The value for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.
SNMPItem=ifIndex.3|R|.1.3.6.1.2.1.2.2.1.1.3|02|A unique value for each interface. Its value ranges between 1 and the value of ifNumber. The value for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.
SNMPItem=ifIndex.4|R|.1.3.6.1.2.1.2.2.1.1.4|02|A unique value for each interface. Its value ranges between 1 and the value of ifNumber. The value for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.
SNMPItem=ifIndex.5|R|.1.3.6.1.2.1.2.2.1.1.5|02|A unique value for each interface. Its value ranges between 1 and the value of ifNumber. The value for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.
SNMPItem=ifIndex.6|R|.1.3.6.1.2.1.2.2.1.1.6|02|A unique value for each interface. Its value ranges between 1 and the value of ifNumber. The value for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.
SNMPItem=ifIndex.7|R|.1.3.6.1.2.1.2.2.1.1.7|02|A unique value for each interface. Its value ranges between 1 and the value of ifNumber. The value for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.
SNMPItem=ifIndex.8|R|.1.3.6.1.2.1.2.2.1.1.8|02|A unique value for each interface. Its value ranges between 1 and the value of ifNumber. The value for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.
SNMPItem=ifLastChange.1|R|.1.3.6.1.2.1.2.2.1.9.1|43|The value of sysUpTime at the time the interface entered its current operational state. If the current state was entered prior to the last re- initialization of the local network management subsystem, then this object contains a zero value.
SNMPItem=ifLastChange.2|R|.1.3.6.1.2.1.2.2.1.9.2|43|The value of sysUpTime at the time the interface entered its current operational state. If the current state was entered prior to the last re- initialization of the local network management subsystem, then this object contains a zero value.
SNMPItem=ifLastChange.3|R|.1.3.6.1.2.1.2.2.1.9.3|43|The value of sysUpTime at the time the interface entered its current operational state. If the current state was entered prior to the last re- initialization of the local network management subsystem, then this object contains a zero value.
SNMPItem=ifLastChange.4|R|.1.3.6.1.2.1.2.2.1.9.4|43|The value of sysUpTime at the time the interface entered its current operational state. If the current state was entered prior to the last re- initialization of the local network management subsystem, then this object contains a zero value.
SNMPItem=ifLastChange.5|R|.1.3.6.1.2.1.2.2.1.9.5|43|The value of sysUpTime at the time the interface entered its current operational state. If the current state was entered prior to the last re- initialization of the local network management subsystem, then this object contains a zero value.
SNMPItem=ifLastChange.6|R|.1.3.6.1.2.1.2.2.1.9.6|43|The value of sysUpTime at the time the interface entered its current operational state. If the current state was entered prior to the last re- initialization of the local network management subsystem, then this object contains a zero value.
SNMPItem=ifLastChange.7|R|.1.3.6.1.2.1.2.2.1.9.7|43|The value of sysUpTime at the time the interface entered its current operational state. If the current state was entered prior to the last re- initialization of the local network management subsystem, then this object contains a zero value.
SNMPItem=ifLastChange.8|R|.1.3.6.1.2.1.2.2.1.9.8|43|The value of sysUpTime at the time the interface entered its current operational state. If the current state was entered prior to the last re- initialization of the local network management subsystem, then this object contains a zero value.
SNMPItem=ifMtu.1|R|.1.3.6.1.2.1.2.2.1.4.1|02|The size of the largest datagram which can be sent/received on the interface, specified in octets. For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.
SNMPItem=ifMtu.2|R|.1.3.6.1.2.1.2.2.1.4.2|02|The size of the largest datagram which can be sent/received on the interface, specified in octets. For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.
SNMPItem=ifMtu.3|R|.1.3.6.1.2.1.2.2.1.4.3|02|The size of the largest datagram which can be sent/received on the interface, specified in octets. For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.
SNMPItem=ifMtu.4|R|.1.3.6.1.2.1.2.2.1.4.4|02|The size of the largest datagram which can be sent/received on the interface, specified in octets. For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.
SNMPItem=ifMtu.5|R|.1.3.6.1.2.1.2.2.1.4.5|02|The size of the largest datagram which can be sent/received on the interface, specified in octets. For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.
SNMPItem=ifMtu.6|R|.1.3.6.1.2.1.2.2.1.4.6|02|The size of the largest datagram which can be sent/received on the interface, specified in octets. For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.
SNMPItem=ifMtu.7|R|.1.3.6.1.2.1.2.2.1.4.7|02|The size of the largest datagram which can be sent/received on the interface, specified in octets. For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.
SNMPItem=ifMtu.8|R|.1.3.6.1.2.1.2.2.1.4.8|02|The size of the largest datagram which can be sent/received on the interface, specified in octets. For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.
SNMPItem=ifOperStatus.1|R|.1.3.6.1.2.1.2.2.1.8.1|02|The current operational state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifOperStatus.2|R|.1.3.6.1.2.1.2.2.1.8.2|02|The current operational state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifOperStatus.3|R|.1.3.6.1.2.1.2.2.1.8.3|02|The current operational state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifOperStatus.4|R|.1.3.6.1.2.1.2.2.1.8.4|02|The current operational state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifOperStatus.5|R|.1.3.6.1.2.1.2.2.1.8.5|02|The current operational state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifOperStatus.6|R|.1.3.6.1.2.1.2.2.1.8.6|02|The current operational state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifOperStatus.7|R|.1.3.6.1.2.1.2.2.1.8.7|02|The current operational state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifOperStatus.8|R|.1.3.6.1.2.1.2.2.1.8.8|02|The current operational state of the interface. The testing(3) state indicates that no operational packets can be passed.
SNMPItem=ifOutDiscards.1|R|.1.3.6.1.2.1.2.2.1.19.1|41|The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifOutDiscards.2|R|.1.3.6.1.2.1.2.2.1.19.2|41|The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifOutDiscards.3|R|.1.3.6.1.2.1.2.2.1.19.3|41|The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifOutDiscards.4|R|.1.3.6.1.2.1.2.2.1.19.4|41|The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifOutDiscards.5|R|.1.3.6.1.2.1.2.2.1.19.5|41|The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifOutDiscards.6|R|.1.3.6.1.2.1.2.2.1.19.6|41|The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifOutDiscards.7|R|.1.3.6.1.2.1.2.2.1.19.7|41|The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifOutDiscards.8|R|.1.3.6.1.2.1.2.2.1.19.8|41|The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
SNMPItem=ifOutErrors.1|R|.1.3.6.1.2.1.2.2.1.20.1|41|The number of outbound packets that could not be transmitted because of errors.
SNMPItem=ifOutErrors.2|R|.1.3.6.1.2.1.2.2.1.20.2|41|The number of outbound packets that could not be transmitted because of errors.
SNMPItem=ifOutErrors.3|R|.1.3.6.1.2.1.2.2.1.20.3|41|The number of outbound packets that could not be transmitted because of errors.
SNMPItem=ifOutErrors.4|R|.1.3.6.1.2.1.2.2.1.20.4|41|The number of outbound packets that could not be transmitted because of errors.
SNMPItem=ifOutErrors.5|R|.1.3.6.1.2.1.2.2.1.20.5|41|The number of outbound packets that could not be transmitted because of errors.
SNMPItem=ifOutErrors.6|R|.1.3.6.1.2.1.2.2.1.20.6|41|The number of outbound packets that could not be transmitted because of errors.
SNMPItem=ifOutErrors.7|R|.1.3.6.1.2.1.2.2.1.20.7|41|The number of outbound packets that could not be transmitted because of errors.
SNMPItem=ifOutErrors.8|R|.1.3.6.1.2.1.2.2.1.20.8|41|The number of outbound packets that could not be transmitted because of errors.
SNMPItem=ifOutNUcastPkts.1|R|.1.3.6.1.2.1.2.2.1.18.1|41|The total number of packets that higher-level protocols requested be transmitted to a non- unicast (i.e., a subnetwork-broadcast or subnetwork-multicast) address, including those that were discarded or not sent.
SNMPItem=ifOutNUcastPkts.2|R|.1.3.6.1.2.1.2.2.1.18.2|41|The total number of packets that higher-level protocols requested be transmitted to a non- unicast (i.e., a subnetwork-broadcast or subnetwork-multicast) address, including those that were discarded or not sent.
SNMPItem=ifOutNUcastPkts.3|R|.1.3.6.1.2.1.2.2.1.18.3|41|The total number of packets that higher-level protocols requested be transmitted to a non- unicast (i.e., a subnetwork-broadcast or subnetwork-multicast) address, including those that were discarded or not sent.
SNMPItem=ifOutNUcastPkts.4|R|.1.3.6.1.2.1.2.2.1.18.4|41|The total number of packets that higher-level protocols requested be transmitted to a non- unicast (i.e., a subnetwork-broadcast or subnetwork-multicast) address, including those that were discarded or not sent.
SNMPItem=ifOutNUcastPkts.5|R|.1.3.6.1.2.1.2.2.1.18.5|41|The total number of packets that higher-level protocols requested be transmitted to a non- unicast (i.e., a subnetwork-broadcast or subnetwork-multicast) address, including those that were discarded or not sent.
SNMPItem=ifOutNUcastPkts.6|R|.1.3.6.1.2.1.2.2.1.18.6|41|The total number of packets that higher-level protocols requested be transmitted to a non- unicast (i.e., a subnetwork-broadcast or subnetwork-multicast) address, including those that were discarded or not sent.
SNMPItem=ifOutNUcastPkts.7|R|.1.3.6.1.2.1.2.2.1.18.7|41|The total number of packets that higher-level protocols requested be transmitted to a non- unicast (i.e., a subnetwork-broadcast or subnetwork-multicast) address, including those that were discarded or not sent.
SNMPItem=ifOutNUcastPkts.8|R|.1.3.6.1.2.1.2.2.1.18.8|41|The total number of packets that higher-level protocols requested be transmitted to a non- unicast (i.e., a subnetwork-broadcast or subnetwork-multicast) address, including those that were discarded or not sent.
SNMPItem=ifOutOctets.1|R|.1.3.6.1.2.1.2.2.1.16.1|41|The total number of octets transmitted out of the interface, including framing characters.
SNMPItem=ifOutOctets.2|R|.1.3.6.1.2.1.2.2.1.16.2|41|The total number of octets transmitted out of the interface, including framing characters.
SNMPItem=ifOutOctets.3|R|.1.3.6.1.2.1.2.2.1.16.3|41|The total number of octets transmitted out of the interface, including framing characters.
SNMPItem=ifOutOctets.4|R|.1.3.6.1.2.1.2.2.1.16.4|41|The total number of octets transmitted out of the interface, including framing characters.
SNMPItem=ifOutOctets.5|R|.1.3.6.1.2.1.2.2.1.16.5|41|The total number of octets transmitted out of the interface, including framing characters.
SNMPItem=ifOutOctets.6|R|.1.3.6.1.2.1.2.2.1.16.6|41|The total number of octets transmitted out of the interface, including framing characters.
SNMPItem=ifOutOctets.7|R|.1.3.6.1.2.1.2.2.1.16.7|41|The total number of octets transmitted out of the interface, including framing characters.
SNMPItem=ifOutOctets.8|R|.1.3.6.1.2.1.2.2.1.16.8|41|The total number of octets transmitted out of the interface, including framing characters.
SNMPItem=ifOutQLen.1|R|.1.3.6.1.2.1.2.2.1.21.1|42|The length of the output packet queue (in packets).
SNMPItem=ifOutQLen.2|R|.1.3.6.1.2.1.2.2.1.21.2|42|The length of the output packet queue (in packets).
SNMPItem=ifOutQLen.3|R|.1.3.6.1.2.1.2.2.1.21.3|42|The length of the output packet queue (in packets).
SNMPItem=ifOutQLen.4|R|.1.3.6.1.2.1.2.2.1.21.4|42|The length of the output packet queue (in packets).
SNMPItem=ifOutQLen.5|R|.1.3.6.1.2.1.2.2.1.21.5|42|The length of the output packet queue (in packets).
SNMPItem=ifOutQLen.6|R|.1.3.6.1.2.1.2.2.1.21.6|42|The length of the output packet queue (in packets).
SNMPItem=ifOutQLen.7|R|.1.3.6.1.2.1.2.2.1.21.7|42|The length of the output packet queue (in packets).
SNMPItem=ifOutQLen.8|R|.1.3.6.1.2.1.2.2.1.21.8|42|The length of the output packet queue (in packets).
SNMPItem=ifOutUcastPkts.1|R|.1.3.6.1.2.1.2.2.1.17.1|41|The total number of packets that higher-level protocols requested be transmitted to a subnetwork-unicast address, including those that were discarded or not sent.
SNMPItem=ifOutUcastPkts.2|R|.1.3.6.1.2.1.2.2.1.17.2|41|The total number of packets that higher-level protocols requested be transmitted to a subnetwork-unicast address, including those that were discarded or not sent.
SNMPItem=ifOutUcastPkts.3|R|.1.3.6.1.2.1.2.2.1.17.3|41|The total number of packets that higher-level protocols requested be transmitted to a subnetwork-unicast address, including those that were discarded or not sent.
SNMPItem=ifOutUcastPkts.4|R|.1.3.6.1.2.1.2.2.1.17.4|41|The total number of packets that higher-level protocols requested be transmitted to a subnetwork-unicast address, including those that were discarded or not sent.
SNMPItem=ifOutUcastPkts.5|R|.1.3.6.1.2.1.2.2.1.17.5|41|The total number of packets that higher-level protocols requested be transmitted to a subnetwork-unicast address, including those that were discarded or not sent.
SNMPItem=ifOutUcastPkts.6|R|.1.3.6.1.2.1.2.2.1.17.6|41|The total number of packets that higher-level protocols requested be transmitted to a subnetwork-unicast address, including those that were discarded or not sent.
SNMPItem=ifOutUcastPkts.7|R|.1.3.6.1.2.1.2.2.1.17.7|41|The total number of packets that higher-level protocols requested be transmitted to a subnetwork-unicast address, including those that were discarded or not sent.
SNMPItem=ifOutUcastPkts.8|R|.1.3.6.1.2.1.2.2.1.17.8|41|The total number of packets that higher-level protocols requested be transmitted to a subnetwork-unicast address, including those that were discarded or not sent.
SNMPItem=ifPhysAddress.1|R|.1.3.6.1.2.1.2.2.1.6.1|04|The interface's address at the protocol layer immediately `below' the network layer in the protocol stack. For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.
SNMPItem=ifPhysAddress.2|R|.1.3.6.1.2.1.2.2.1.6.2|04|The interface's address at the protocol layer immediately `below' the network layer in the protocol stack. For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.
SNMPItem=ifPhysAddress.3|R|.1.3.6.1.2.1.2.2.1.6.3|04|The interface's address at the protocol layer immediately `below' the network layer in the protocol stack. For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.
SNMPItem=ifPhysAddress.4|R|.1.3.6.1.2.1.2.2.1.6.4|04|The interface's address at the protocol layer immediately `below' the network layer in the protocol stack. For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.
SNMPItem=ifPhysAddress.5|R|.1.3.6.1.2.1.2.2.1.6.5|04|The interface's address at the protocol layer immediately `below' the network layer in the protocol stack. For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.
SNMPItem=ifPhysAddress.6|R|.1.3.6.1.2.1.2.2.1.6.6|04|The interface's address at the protocol layer immediately `below' the network layer in the protocol stack. For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.
SNMPItem=ifPhysAddress.7|R|.1.3.6.1.2.1.2.2.1.6.7|04|The interface's address at the protocol layer immediately `below' the network layer in the protocol stack. For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.
SNMPItem=ifPhysAddress.8|R|.1.3.6.1.2.1.2.2.1.6.8|04|The interface's address at the protocol layer immediately `below' the network layer in the protocol stack. For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.
SNMPItem=ifSpecific.1|R|.1.3.6.1.2.1.2.2.1.22.1|06|A reference to MIB definitions specific to the particular media being used to realize the interface. For example, if the interface is realized by an ethernet, then the value of this object refers to a document defining objects specific to ethernet. If this information is not present, its value should be set to the OBJECT IDENTIFIER { 0 0 }, which is a syntatically valid object identifier, and any conformant implementation of ASN.1 and BER must be able to generate and recognize this value.
SNMPItem=ifSpecific.2|R|.1.3.6.1.2.1.2.2.1.22.2|06|A reference to MIB definitions specific to the particular media being used to realize the interface. For example, if the interface is realized by an ethernet, then the value of this object refers to a document defining objects specific to ethernet. If this information is not present, its value should be set to the OBJECT IDENTIFIER { 0 0 }, which is a syntatically valid object identifier, and any conformant implementation of ASN.1 and BER must be able to generate and recognize this value.
SNMPItem=ifSpecific.3|R|.1.3.6.1.2.1.2.2.1.22.3|06|A reference to MIB definitions specific to the particular media being used to realize the interface. For example, if the interface is realized by an ethernet, then the value of this object refers to a document defining objects specific to ethernet. If this information is not present, its value should be set to the OBJECT IDENTIFIER { 0 0 }, which is a syntatically valid object identifier, and any conformant implementation of ASN.1 and BER must be able to generate and recognize this value.
SNMPItem=ifSpecific.4|R|.1.3.6.1.2.1.2.2.1.22.4|06|A reference to MIB definitions specific to the particular media being used to realize the interface. For example, if the interface is realized by an ethernet, then the value of this object refers to a document defining objects specific to ethernet. If this information is not present, its value should be set to the OBJECT IDENTIFIER { 0 0 }, which is a syntatically valid object identifier, and any conformant implementation of ASN.1 and BER must be able to generate and recognize this value.
SNMPItem=ifSpecific.5|R|.1.3.6.1.2.1.2.2.1.22.5|06|A reference to MIB definitions specific to the particular media being used to realize the interface. For example, if the interface is realized by an ethernet, then the value of this object refers to a document defining objects specific to ethernet. If this information is not present, its value should be set to the OBJECT IDENTIFIER { 0 0 }, which is a syntatically valid object identifier, and any conformant implementation of ASN.1 and BER must be able to generate and recognize this value.
SNMPItem=ifSpecific.6|R|.1.3.6.1.2.1.2.2.1.22.6|06|A reference to MIB definitions specific to the particular media being used to realize the interface. For example, if the interface is realized by an ethernet, then the value of this object refers to a document defining objects specific to ethernet. If this information is not present, its value should be set to the OBJECT IDENTIFIER { 0 0 }, which is a syntatically valid object identifier, and any conformant implementation of ASN.1 and BER must be able to generate and recognize this value.
SNMPItem=ifSpecific.7|R|.1.3.6.1.2.1.2.2.1.22.7|06|A reference to MIB definitions specific to the particular media being used to realize the interface. For example, if the interface is realized by an ethernet, then the value of this object refers to a document defining objects specific to ethernet. If this information is not present, its value should be set to the OBJECT IDENTIFIER { 0 0 }, which is a syntatically valid object identifier, and any conformant implementation of ASN.1 and BER must be able to generate and recognize this value.
SNMPItem=ifSpecific.8|R|.1.3.6.1.2.1.2.2.1.22.8|06|A reference to MIB definitions specific to the particular media being used to realize the interface. For example, if the interface is realized by an ethernet, then the value of this object refers to a document defining objects specific to ethernet. If this information is not present, its value should be set to the OBJECT IDENTIFIER { 0 0 }, which is a syntatically valid object identifier, and any conformant implementation of ASN.1 and BER must be able to generate and recognize this value.
SNMPItem=ifSpeed.1|R|.1.3.6.1.2.1.2.2.1.5.1|42|An estimate of the interface's current bandwidth in bits per second. For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.
SNMPItem=ifSpeed.2|R|.1.3.6.1.2.1.2.2.1.5.2|42|An estimate of the interface's current bandwidth in bits per second. For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.
SNMPItem=ifSpeed.3|R|.1.3.6.1.2.1.2.2.1.5.3|42|An estimate of the interface's current bandwidth in bits per second. For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.
SNMPItem=ifSpeed.4|R|.1.3.6.1.2.1.2.2.1.5.4|42|An estimate of the interface's current bandwidth in bits per second. For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.
SNMPItem=ifSpeed.5|R|.1.3.6.1.2.1.2.2.1.5.5|42|An estimate of the interface's current bandwidth in bits per second. For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.
SNMPItem=ifSpeed.6|R|.1.3.6.1.2.1.2.2.1.5.6|42|An estimate of the interface's current bandwidth in bits per second. For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.
SNMPItem=ifSpeed.7|R|.1.3.6.1.2.1.2.2.1.5.7|42|An estimate of the interface's current bandwidth in bits per second. For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.
SNMPItem=ifSpeed.8|R|.1.3.6.1.2.1.2.2.1.5.8|42|An estimate of the interface's current bandwidth in bits per second. For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.
SNMPItem=ifType.1|R|.1.3.6.1.2.1.2.2.1.3.1|02|The type of interface, distinguished according to the physical/link protocol(s) immediately `below' the network layer in the protocol stack.
SNMPItem=ifType.2|R|.1.3.6.1.2.1.2.2.1.3.2|02|The type of interface, distinguished according to the physical/link protocol(s) immediately `below' the network layer in the protocol stack.
SNMPItem=ifType.3|R|.1.3.6.1.2.1.2.2.1.3.3|02|The type of interface, distinguished according to the physical/link protocol(s) immediately `below' the network layer in the protocol stack.
SNMPItem=ifType.4|R|.1.3.6.1.2.1.2.2.1.3.4|02|The type of interface, distinguished according to the physical/link protocol(s) immediately `below' the network layer in the protocol stack.
SNMPItem=ifType.5|R|.1.3.6.1.2.1.2.2.1.3.5|02|The type of interface, distinguished according to the physical/link protocol(s) immediately `below' the network layer in the protocol stack.
SNMPItem=ifType.6|R|.1.3.6.1.2.1.2.2.1.3.6|02|The type of interface, distinguished according to the physical/link protocol(s) immediately `below' the network layer in the protocol stack.
SNMPItem=ifType.7|R|.1.3.6.1.2.1.2.2.1.3.7|02|The type of interface, distinguished according to the physical/link protocol(s) immediately `below' the network layer in the protocol stack.
SNMPItem=ifType.8|R|.1.3.6.1.2.1.2.2.1.3.8|02|The type of interface, distinguished according to the physical/link protocol(s) immediately `below' the network layer in the protocol stack.

[Privat-Common]
SNMPItem=snBootP|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.10.5.0|02|Enable/Disable BOOTP. Changes become valid after restart.
SNMPItem=snBootStrapVersion|R|.1.3.6.1.4.1.4196.1.1.2.100.1.8.3.0|04|The firmware version of the boot software installed in the system.
SNMPItem=snDownloadAutoLoad|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.5.1.8.0|02|The value enabled(1) will automatically start TFTP when the Operative Program is invalid. The value disabled(2) will inhibit TFTP.
SNMPItem=snDownloadConfigControl|W|.1.3.6.1.4.1.4196.1.1.2.100.1.5.1.12.0|02|Setting this object to start-load(2) causes the system to start a downloading process. Setting this object to start-save(3) causes the system to start a uploading process. Setting this object to cancel-(4) causes the system to abort the process. If ParamsProtocol is <tftp-server> the object is not writable. Reading the object, meaning-less(127) is returned.
SNMPItem=snDownloadConfigFile|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.5.1.11.0|04|Full path name of file to be saved or loaded from the TFTP server host. Note that the file name must have the appropriate syntax for the TFTP server host. E.g., if the TFTP server host is a UNIX machine, the full file name might be /tftp/name.txt, or if the TFTP server host is a Windows machine, the full file name might be C:\tftp\name.txt.
SNMPItem=snDownloadEventLogTableControl|W|.1.3.6.1.4.1.4196.1.1.2.100.1.5.1.10.0|02|Setting this object to start-save(3) causes the system to start a uploading process. Setting this object to cancel-(4) causes the system to abort a uploading process. If ParamsProtocol is <tftp-server> the object is not writable. Reading the object, meaning-less(127) is returned.
SNMPItem=snDownloadEventLogTableFile|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.5.1.9.0|04|Full path name of file to be saved to the TFTP server host. Note that the file name must have the appropriate syntax for the TFTP server host. E.g., if the TFTP server host is a UNIX machine, the full file name might be /tftp/name.txt, or if the TFTP server host is a Windows machine, the full file name might be C:\tftp\name.txt.
SNMPItem=snDownloadNextBlockId|R|.1.3.6.1.4.1.4196.1.1.2.100.1.5.1.6.0|02|The number of the next block ID expected by the TFTP session. Block ID's are numbers starting with 1.
SNMPItem=snDownloadParamsControl|W|.1.3.6.1.4.1.4196.1.1.2.100.1.5.1.4.0|02|Setting this object to start-load(2) causes the system to start a downloading process. Setting this object to cancel-load(3) causes the system to abort a downloading process. If ParamsProtocol is <tftp-server> the object is not writable. Reading the object, meaning-less(127) is returned.
SNMPItem=snDownloadParamsError|R|.1.3.6.1.4.1.4196.1.1.2.100.1.5.1.7.0|04|The error status of the TFTP client.
SNMPItem=snDownloadParamsFile|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.5.1.3.0|04|Full path name of file to be loaded from the TFTP server host. Note that the file name must have the appropriate syntax for the TFTP server host. E.g., if the TFTP server host is a UNIX machine, the full file name might be /tftp/name.lad, or if the TFTP server host is a Windows machine, the full file name might be C:\tftp\name.lad.
SNMPItem=snDownloadParamsStatus|R|.1.3.6.1.4.1.4196.1.1.2.100.1.5.1.5.0|02|The status of the TFTP client.
SNMPItem=snDownloadParamsTftpServerHostName|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.5.1.2.0|04|IP address of the TFTP server (x.y.z.w).
SNMPItem=snEmailAddress|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.8.23.0|04|E-mail address to which messages will be sent.
SNMPItem=snEmailEnable|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.8.22.0|02|E-mail functionality for sending a message when an event occurred.
SNMPItem=snEmailSMTPIpAddress|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.8.20.0|40|IP address or host name of SMTP server.
SNMPItem=snEmailSMTPPort|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.8.21.0|02|Number of TCP port to which the SMTP server will listen.
SNMPItem=snEraseDataStoreFlash|W|.1.3.6.1.4.1.4196.1.1.2.100.1.8.17.0|02|Erase all configuration data and log table entries. In opposite to reset to factory defaults nothing is saved.
SNMPItem=snHwVersion|R|.1.3.6.1.4.1.4196.1.1.2.100.1.8.2.0|04|The hardware version of the system.
SNMPItem=snInfoOrderNr|R|.1.3.6.1.4.1.4196.1.1.2.100.1.8.6.0|04|The order number of this product.
SNMPItem=snInfoSerialNr|R|.1.3.6.1.4.1.4196.1.1.2.100.1.10.10.0|04|MAC address of the switch as unique serial number.
SNMPItem=snIpAddress|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.10.2.0|40|IP address of the agent. Changes become valid after restart.
SNMPItem=snIpDefaultGateway|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.10.4.0|40|IP address of the default gateway. Changes become valid after restart.
SNMPItem=snIpSubnetMask|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.10.3.0|40|IP subnet mask of the agent. Changes become valid after restart.
SNMPItem=snMacAddressBase|R|.1.3.6.1.4.1.4196.1.1.2.100.1.10.10.0|04|MAC address of the switch.
SNMPItem=snNvLogClear|W|.1.3.6.1.4.1.4196.1.1.2.100.1.6.4.0|02|Setting this object to clear(1) value, clears the events that are kept in Non-Volatile Memory.
SNMPItem=snNvLogCurrentEntries|R|.1.3.6.1.4.1.4196.1.1.2.100.1.6.2.0|02|Number of events that are currently kept in Non-Volatile Memory.
SNMPItem=snNvLogMaxEntries|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.6.1.0|02|Maximum number of events that can be kept in Non-Volatile Memory.
SNMPItem=snNvLogNewEntries|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.6.3.0|02|Counter for events that are logged in Non-Volatile Memory. This counter starts at 0 after each system start. User can reset this counter at any time by writing 0 to this object.
SNMPItem=snNvLogPositionDescr|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.6.6.0|04|Read - find the oid of the entry with spezial number in log table. Write - set the entry number in log table for the read request.
SNMPItem=snResetCounters|W|.1.3.6.1.4.1.4196.1.1.2.100.1.8.16.0|02|Reset all statistic counters.
SNMPItem=snResetPowerUpCount|R|.1.3.6.1.4.1.4196.1.1.2.100.1.8.14.0|02|The number of times the sytem was powered up.
SNMPItem=snSerialPortSpeed|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.8.8.0|02|The serial port speed in bits per second.
SNMPItem=snSetFactoryDefs|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.8.15.0|02|Restore factory defaults.
SNMPItem=snSetMemoryDefs|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.8.18.0|02|Restore memory defaults and restart.
SNMPItem=snSwVersion|R|.1.3.6.1.4.1.4196.1.1.2.100.1.8.4.0|04|The firmware version of the system.
SNMPItem=snSwitchSNMPEnable|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.8.12.0|02|Determines whether this device may be accessed by SNMP management stations.
SNMPItem=snSwitchTelnetEnable|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.8.9.0|02|Enable/Disable TELNET access.
SNMPItem=snSwitchTelnetTimeOut|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.8.11.0|02|Time out for the TELNET session. The time could be set in steps of 10 seconds. Minimum value is 60 seconds, maximum value is 600 seconds.
SNMPItem=snSwitchTelnetTimeOutEnable|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.8.10.0|02|Enables or disables the time out for a TELNET session.
SNMPItem=snSwitchTrapsEnable|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.1.0|02|Determines whether this device will transmit traps to SNMP management stations. This if this object is set to disable, no traps will be sent. Setting this object to enabled is a necessary, but not a sufficient condition for transmission of traps.
SNMPItem=snSysReset|W|.1.3.6.1.4.1.4196.1.1.2.100.1.8.13.0|02|Resets the system. cold-reset(1) is identical to Power-On-Reset or Watchdog-Reset. warm-reset(2) is identical to restart command.
SNMPItem=snTrapMaxManagers|R|.1.3.6.1.4.1.4196.1.1.2.100.1.7.6.0|02|The maximum number of managers that can be registered for receiving traps.
SNMPItem=snTrapTimeLastGenerated|R|.1.3.6.1.4.1.4196.1.1.2.100.1.7.5.0|43|The value of sysUpTime at the time the last trap was generated.
SNMPItem=snUserDescription|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.8.1.0|04|Extended description of the station including user specific information. This value is used for the email From-field.
SNMPItem=snTrapAddress.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.1.1|40|The IP address of the network management entity to which traps should be sent.
SNMPItem=snTrapAddress.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.1.2|40|The IP address of the network management entity to which traps should be sent.
SNMPItem=snTrapAddress.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.1.3|40|The IP address of the network management entity to which traps should be sent.
SNMPItem=snTrapAddress.4|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.1.4|40|The IP address of the network management entity to which traps should be sent.
SNMPItem=snTrapAddress.5|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.1.5|40|The IP address of the network management entity to which traps should be sent.
SNMPItem=snTrapAddress.6|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.1.6|40|The IP address of the network management entity to which traps should be sent.
SNMPItem=snTrapAddress.7|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.1.7|40|The IP address of the network management entity to which traps should be sent.
SNMPItem=snTrapAddress.8|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.1.8|40|The IP address of the network management entity to which traps should be sent.
SNMPItem=snTrapAddress.9|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.1.9|40|The IP address of the network management entity to which traps should be sent.
SNMPItem=snTrapAddress.10|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.1.10|40|The IP address of the network management entity to which traps should be sent.
SNMPItem=snTrapState.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.3.1|02|The state of this entry in the trap address table. Setting this object to inactive(3) removes the corresponding entry from the table.
SNMPItem=snTrapState.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.3.2|02|The state of this entry in the trap address table. Setting this object to inactive(3) removes the corresponding entry from the table.
SNMPItem=snTrapState.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.3.3|02|The state of this entry in the trap address table. Setting this object to inactive(3) removes the corresponding entry from the table.
SNMPItem=snTrapState.4|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.3.4|02|The state of this entry in the trap address table. Setting this object to inactive(3) removes the corresponding entry from the table.
SNMPItem=snTrapState.5|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.3.5|02|The state of this entry in the trap address table. Setting this object to inactive(3) removes the corresponding entry from the table.
SNMPItem=snTrapState.6|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.3.6|02|The state of this entry in the trap address table. Setting this object to inactive(3) removes the corresponding entry from the table.
SNMPItem=snTrapState.7|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.3.7|02|The state of this entry in the trap address table. Setting this object to inactive(3) removes the corresponding entry from the table.
SNMPItem=snTrapState.8|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.3.8|02|The state of this entry in the trap address table. Setting this object to inactive(3) removes the corresponding entry from the table.
SNMPItem=snTrapState.9|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.3.9|02|The state of this entry in the trap address table. Setting this object to inactive(3) removes the corresponding entry from the table.
SNMPItem=snTrapState.10|RW|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.3.10|02|The state of this entry in the trap address table. Setting this object to inactive(3) removes the corresponding entry from the table.
SNMPItem=snTrapIndex.1|R|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.6.1|02|The Index of Trap Table.
SNMPItem=snTrapIndex.2|R|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.6.2|02|The Index of Trap Table.
SNMPItem=snTrapIndex.3|R|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.6.3|02|The Index of Trap Table.
SNMPItem=snTrapIndex.4|R|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.6.4|02|The Index of Trap Table.
SNMPItem=snTrapIndex.5|R|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.6.5|02|The Index of Trap Table.
SNMPItem=snTrapIndex.6|R|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.6.6|02|The Index of Trap Table.
SNMPItem=snTrapIndex.7|R|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.6.7|02|The Index of Trap Table.
SNMPItem=snTrapIndex.8|R|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.6.8|02|The Index of Trap Table.
SNMPItem=snTrapIndex.9|R|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.6.9|02|The Index of Trap Table.
SNMPItem=snTrapIndex.10|R|.1.3.6.1.4.1.4196.1.1.2.100.1.7.7.1.6.10|02|The Index of Trap Table.

[Privat-ProductSpecific]
SNMPItem=snConfigId|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.100.0|02|OSM/ESM hardware type.
SNMPItem=snOsmChangedPowerLine|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.45.0|02|The power line where the last Power-Up or -Down occurred. User can reset to initial value 0 at any time.
SNMPItem=snOsmDigitalInputChange|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.5.0|04|Digital Input change
SNMPItem=snOsmFaultState|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.2.0|02|Indicates OSM/ESM fault state (state of fault LED/signaling contact).
SNMPItem=snOsmFaultValue|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.4.0|04|Fault value: 0 = no fault, bit 0 = power, bit 1 = linkdown, bit 2 = internal error, bit 3 = standby, bit 4 = rm, bit 5 = dip switch rm, bit 6 = dip switch standby, bit 7 = ncm, bit 8 = partition port 1, ... bit 15 = partition port 8, bit 16 = observer error, bit 17 = non-recoverable ring error, bit 18 = reset to factory defaults
SNMPItem=snOsmMulticastFlowControlMac|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.37.0|04|MAC multicast address of flow control packets.
SNMPItem=snOsmMulticastLinkMac|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.34.0|04|MAC multicast address used for redundancy functions.
SNMPItem=snOsmMulticastSyncMac|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.36.0|04|MAC multicast address of time synchronisation packets.
SNMPItem=snOsmMulticastTestMac|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.33.0|04|MAC multicast address used for redundancy functions.
SNMPItem=snOsmPort7TestMac|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.31.0|04|MAC (source) address of test telegrams sent on port 7.
SNMPItem=snOsmPort8TestMac|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.32.0|04|MAC (source) address of test telegrams sent on port 8.
SNMPItem=snOsmPowerSupply1Mask|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.43.0|02|Mask of power supply line 1.
SNMPItem=snOsmPowerSupply1State|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.41.0|02|State of power supply line 1.
SNMPItem=snOsmPowerSupply2Mask|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.44.0|02|Mask of power supply line 2.
SNMPItem=snOsmPowerSupply2State|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.42.0|02|State of power supply line 2.
SNMPItem=snOsmResetCounters|W|.1.3.6.1.4.1.4196.1.1.2.100.2.1.51.0|02|Reset all counters of OSM protocol software.
SNMPItem=snOsmRmMode|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.11.0|02|RM mode.
SNMPItem=snOsmRmObserverMode|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.14.0|02|Reserved for further use.
SNMPItem=snOsmRmState|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.12.0|02|RM State.
SNMPItem=snOsmRmStateChanges|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.13.0|41|Number of changes to RM active state.
SNMPItem=snOsmSignalledFaults|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.3.0|41|Number of signalled faults.
SNMPItem=snOsmStandbyCableState|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.24.0|02|Standby cable state.
SNMPItem=snOsmStandbyMode|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.21.0|02|Standby Mode.
SNMPItem=snOsmStandbyState|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.22.0|02|Standby State.
SNMPItem=snOsmStandbyStateChanges|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.25.0|41|Number of changes to standby active state.
SNMPItem=snOsmTestMaxDelay|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.38.0|02|Measured maximum delay of RM test telegrams.
SNMPItem=snOsmUnicastLinkMac|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.35.0|04|MAC unicast address used for redundancy functions.
SNMPItem=snSwitchAgingEnable|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.105.0|02|Enable/Disable auto-aging functionality of the learning table.
SNMPItem=snSwitchFdbImagePollTime|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.107.0|02|Polling time for update of learning table image.
SNMPItem=snSwitchFlowControl|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.101.0|02|Enable/Disable flow control functionality.
SNMPItem=snSwitchFlushDataStore|W|.1.3.6.1.4.1.4196.1.1.2.100.2.1.110.0|02|Force direct saving of configuration data and log entries.
SNMPItem=snSwitchLearningTableEntries|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.108.0|02|Number of entries in learning table image.
SNMPItem=snSwitchRmonMode|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.106.0|02|Enable/Disable RMon functionality (statistics, history, alarm, events).
SNMPItem=snSwitchSnifferDest|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.103.0|02|Destination port for traffic mirroring.
SNMPItem=snSwitchSnifferEnable|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.104.0|02|Enable/Disable mirroring functionality.
SNMPItem=snSwitchSnifferSrc|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.102.0|02|Source port for traffic mirroring.
SNMPItem=snSwitchTimeToNextDataStore|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.109.0|02|Time in seconds, when the next saving of configuration data and log entries takes place.
SNMPItem=snOsmPortBackPressure.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.6.1|02|Back pressure mode for the half-duplex port.
SNMPItem=snOsmPortBackPressure.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.6.2|02|Back pressure mode for the half-duplex port.
SNMPItem=snOsmPortBackPressure.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.6.3|02|Back pressure mode for the half-duplex port.
SNMPItem=snOsmPortBackPressure.4|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.6.4|02|Back pressure mode for the half-duplex port.
SNMPItem=snOsmPortBackPressure.5|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.6.5|02|Back pressure mode for the half-duplex port.
SNMPItem=snOsmPortBackPressure.6|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.6.6|02|Back pressure mode for the half-duplex port.
SNMPItem=snOsmPortBackPressure.7|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.6.7|02|Back pressure mode for the half-duplex port.
SNMPItem=snOsmPortBackPressure.8|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.6.8|02|Back pressure mode for the half-duplex port.
SNMPItem=snOsmPortFaultMaskState.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.2.1|02|Mask for checking link state of the port. If a link of a unmasked (checked) port is down then a fault will be generated.
SNMPItem=snOsmPortFaultMaskState.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.2.2|02|Mask for checking link state of the port. If a link of a unmasked (checked) port is down then a fault will be generated.
SNMPItem=snOsmPortFaultMaskState.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.2.3|02|Mask for checking link state of the port. If a link of a unmasked (checked) port is down then a fault will be generated.
SNMPItem=snOsmPortFaultMaskState.4|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.2.4|02|Mask for checking link state of the port. If a link of a unmasked (checked) port is down then a fault will be generated.
SNMPItem=snOsmPortFaultMaskState.5|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.2.5|02|Mask for checking link state of the port. If a link of a unmasked (checked) port is down then a fault will be generated.
SNMPItem=snOsmPortFaultMaskState.6|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.2.6|02|Mask for checking link state of the port. If a link of a unmasked (checked) port is down then a fault will be generated.
SNMPItem=snOsmPortFaultMaskState.7|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.2.7|02|Mask for checking link state of the port. If a link of a unmasked (checked) port is down then a fault will be generated.
SNMPItem=snOsmPortFaultMaskState.8|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.2.8|02|Mask for checking link state of the port. If a link of a unmasked (checked) port is down then a fault will be generated.
SNMPItem=snOsmPortIndex.1|NA|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.1.1|02|Unique number for each interface. The number is in the range 1 to ifNumber. The number for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization.
SNMPItem=snOsmPortIndex.2|NA|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.1.2|02|Unique number for each interface. The number is in the range 1 to ifNumber. The number for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization.
SNMPItem=snOsmPortIndex.3|NA|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.1.3|02|Unique number for each interface. The number is in the range 1 to ifNumber. The number for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization.
SNMPItem=snOsmPortIndex.4|NA|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.1.4|02|Unique number for each interface. The number is in the range 1 to ifNumber. The number for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization.
SNMPItem=snOsmPortIndex.5|NA|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.1.5|02|Unique number for each interface. The number is in the range 1 to ifNumber. The number for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization.
SNMPItem=snOsmPortIndex.6|NA|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.1.6|02|Unique number for each interface. The number is in the range 1 to ifNumber. The number for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization.
SNMPItem=snOsmPortIndex.7|NA|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.1.7|02|Unique number for each interface. The number is in the range 1 to ifNumber. The number for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization.
SNMPItem=snOsmPortIndex.8|NA|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.1.8|02|Unique number for each interface. The number is in the range 1 to ifNumber. The number for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization.
SNMPItem=snOsmPortLockState.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.4.1|02|Lock state of the port.
SNMPItem=snOsmPortLockState.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.4.2|02|Lock state of the port.
SNMPItem=snOsmPortLockState.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.4.3|02|Lock state of the port.
SNMPItem=snOsmPortLockState.4|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.4.4|02|Lock state of the port.
SNMPItem=snOsmPortLockState.5|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.4.5|02|Lock state of the port.
SNMPItem=snOsmPortLockState.6|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.4.6|02|Lock state of the port.
SNMPItem=snOsmPortLockState.7|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.4.7|02|Lock state of the port.
SNMPItem=snOsmPortLockState.8|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.4.8|02|Lock state of the port.
SNMPItem=snOsmPortPartitionState.1|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.5.1|02|Partition state of the port.
SNMPItem=snOsmPortPartitionState.2|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.5.2|02|Partition state of the port.
SNMPItem=snOsmPortPartitionState.3|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.5.3|02|Partition state of the port.
SNMPItem=snOsmPortPartitionState.4|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.5.4|02|Partition state of the port.
SNMPItem=snOsmPortPartitionState.5|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.5.5|02|Partition state of the port.
SNMPItem=snOsmPortPartitionState.6|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.5.6|02|Partition state of the port.
SNMPItem=snOsmPortPartitionState.7|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.5.7|02|Partition state of the port.
SNMPItem=snOsmPortPartitionState.8|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.5.8|02|Partition state of the port.
SNMPItem=snOsmPortStandbyMaskState.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.3.1|02|Mask for standby ports.
SNMPItem=snOsmPortStandbyMaskState.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.3.2|02|Mask for standby ports.
SNMPItem=snOsmPortStandbyMaskState.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.3.3|02|Mask for standby ports.
SNMPItem=snOsmPortStandbyMaskState.4|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.3.4|02|Mask for standby ports.
SNMPItem=snOsmPortStandbyMaskState.5|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.3.5|02|Mask for standby ports.
SNMPItem=snOsmPortStandbyMaskState.6|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.3.6|02|Mask for standby ports.
SNMPItem=snOsmPortStandbyMaskState.7|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.3.7|02|Mask for standby ports.
SNMPItem=snOsmPortStandbyMaskState.8|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.61.1.3.8|02|Mask for standby ports.
SNMPItem=snOsmDigitalInIndex.1|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.1.1|02|Index of Digital-In.
SNMPItem=snOsmDigitalInIndex.2|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.1.2|02|Index of Digital-In.
SNMPItem=snOsmDigitalInIndex.3|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.1.3|02|Index of Digital-In.
SNMPItem=snOsmDigitalInIndex.4|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.1.4|02|Index of Digital-In.
SNMPItem=snOsmDigitalInIndex.5|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.1.5|02|Index of Digital-In.
SNMPItem=snOsmDigitalInIndex.6|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.1.6|02|Index of Digital-In.
SNMPItem=snOsmDigitalInIndex.7|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.1.7|02|Index of Digital-In.
SNMPItem=snOsmDigitalInIndex.8|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.1.8|02|Index of Digital-In.
SNMPItem=snOsmDigitalInLogEvent.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.5.1|02|Enables/Disables Digital-In LogTable notification.
SNMPItem=snOsmDigitalInLogEvent.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.5.2|02|Enables/Disables Digital-In LogTable notification.
SNMPItem=snOsmDigitalInLogEvent.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.5.3|02|Enables/Disables Digital-In LogTable notification.
SNMPItem=snOsmDigitalInLogEvent.4|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.5.4|02|Enables/Disables Digital-In LogTable notification.
SNMPItem=snOsmDigitalInLogEvent.5|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.5.5|02|Enables/Disables Digital-In LogTable notification.
SNMPItem=snOsmDigitalInLogEvent.6|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.5.6|02|Enables/Disables Digital-In LogTable notification.
SNMPItem=snOsmDigitalInLogEvent.7|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.5.7|02|Enables/Disables Digital-In LogTable notification.
SNMPItem=snOsmDigitalInLogEvent.8|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.5.8|02|Enables/Disables Digital-In LogTable notification.
SNMPItem=snOsmDigitalInMailEvent.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.3.1|02|Enables/Disables Digital-In E-Mail notification.
SNMPItem=snOsmDigitalInMailEvent.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.3.2|02|Enables/Disables Digital-In E-Mail notification.
SNMPItem=snOsmDigitalInMailEvent.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.3.3|02|Enables/Disables Digital-In E-Mail notification.
SNMPItem=snOsmDigitalInMailEvent.4|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.3.4|02|Enables/Disables Digital-In E-Mail notification.
SNMPItem=snOsmDigitalInMailEvent.5|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.3.5|02|Enables/Disables Digital-In E-Mail notification.
SNMPItem=snOsmDigitalInMailEvent.6|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.3.6|02|Enables/Disables Digital-In E-Mail notification.
SNMPItem=snOsmDigitalInMailEvent.7|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.3.7|02|Enables/Disables Digital-In E-Mail notification.
SNMPItem=snOsmDigitalInMailEvent.8|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.3.8|02|Enables/Disables Digital-In E-Mail notification.
SNMPItem=snOsmDigitalInName.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.2.1|04|Name of Digital-In.
SNMPItem=snOsmDigitalInName.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.2.2|04|Name of Digital-In.
SNMPItem=snOsmDigitalInName.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.2.3|04|Name of Digital-In.
SNMPItem=snOsmDigitalInName.4|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.2.4|04|Name of Digital-In.
SNMPItem=snOsmDigitalInName.5|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.2.5|04|Name of Digital-In.
SNMPItem=snOsmDigitalInName.6|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.2.6|04|Name of Digital-In.
SNMPItem=snOsmDigitalInName.7|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.2.7|04|Name of Digital-In.
SNMPItem=snOsmDigitalInName.8|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.2.8|04|Name of Digital-In.
SNMPItem=snOsmDigitalInState.1|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.6.1|02|State of the Digital-In.
SNMPItem=snOsmDigitalInState.2|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.6.2|02|State of the Digital-In.
SNMPItem=snOsmDigitalInState.3|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.6.3|02|State of the Digital-In.
SNMPItem=snOsmDigitalInState.4|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.6.4|02|State of the Digital-In.
SNMPItem=snOsmDigitalInState.5|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.6.5|02|State of the Digital-In.
SNMPItem=snOsmDigitalInState.6|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.6.6|02|State of the Digital-In.
SNMPItem=snOsmDigitalInState.7|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.6.7|02|State of the Digital-In.
SNMPItem=snOsmDigitalInState.8|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.6.8|02|State of the Digital-In.
SNMPItem=snOsmDigitalInTrapEvent.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.4.1|02|Enables/Disables Digital-In Trap notification.
SNMPItem=snOsmDigitalInTrapEvent.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.4.2|02|Enables/Disables Digital-In Trap notification.
SNMPItem=snOsmDigitalInTrapEvent.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.4.3|02|Enables/Disables Digital-In Trap notification.
SNMPItem=snOsmDigitalInTrapEvent.4|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.4.4|02|Enables/Disables Digital-In Trap notification.
SNMPItem=snOsmDigitalInTrapEvent.5|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.4.5|02|Enables/Disables Digital-In Trap notification.
SNMPItem=snOsmDigitalInTrapEvent.6|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.4.6|02|Enables/Disables Digital-In Trap notification.
SNMPItem=snOsmDigitalInTrapEvent.7|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.4.7|02|Enables/Disables Digital-In Trap notification.
SNMPItem=snOsmDigitalInTrapEvent.8|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.63.1.4.8|02|Enables/Disables Digital-In Trap notification.
SNMPItem=snOsmEventAuthenticationFailure.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.4.1|02|Enables/Disables authentication failure notification.
SNMPItem=snOsmEventAuthenticationFailure.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.4.2|02|Enables/Disables authentication failure notification.
SNMPItem=snOsmEventAuthenticationFailure.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.4.3|02|Enables/Disables authentication failure notification.
SNMPItem=snOsmEventColdWarmStart.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.2.1|02|Enables/Disables cold/warm start notification.
SNMPItem=snOsmEventColdWarmStart.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.2.2|02|Enables/Disables cold/warm start notification.
SNMPItem=snOsmEventColdWarmStart.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.2.3|02|Enables/Disables cold/warm start notification.
SNMPItem=snOsmEventFault.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.9.1|02|Enables/Disables fault notification.
SNMPItem=snOsmEventFault.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.9.2|02|Enables/Disables fault notification.
SNMPItem=snOsmEventFault.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.9.3|02|Enables/Disables fault notification.
SNMPItem=snOsmEventIndex.1|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.1.1|02|Index of columns : E-Mail = 1, Traps = 2, LogTable = 3.
SNMPItem=snOsmEventIndex.2|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.1.2|02|Index of columns : E-Mail = 1, Traps = 2, LogTable = 3.
SNMPItem=snOsmEventIndex.3|R|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.1.3|02|Index of columns : E-Mail = 1, Traps = 2, LogTable = 3.
SNMPItem=snOsmEventLinkChange.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.3.1|02|Enables/Disables link change notification.
SNMPItem=snOsmEventLinkChange.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.3.2|02|Enables/Disables link change notification.
SNMPItem=snOsmEventLinkChange.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.3.3|02|Enables/Disables link change notification.
SNMPItem=snOsmEventPowerChange.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.6.1|02|Enables/Disables power change notification.
SNMPItem=snOsmEventPowerChange.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.6.2|02|Enables/Disables power change notification.
SNMPItem=snOsmEventPowerChange.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.6.3|02|Enables/Disables power change notification.
SNMPItem=snOsmEventRmStateChange.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.7.1|02|Enables/Disables RM state change notification.
SNMPItem=snOsmEventRmStateChange.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.7.2|02|Enables/Disables RM state change notification.
SNMPItem=snOsmEventRmStateChange.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.7.3|02|Enables/Disables RM state change notification.
SNMPItem=snOsmEventRmonAlarm.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.5.1|02|Enables/Disables RMon alarm notification.
SNMPItem=snOsmEventRmonAlarm.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.5.2|02|Enables/Disables RMon alarm notification.
SNMPItem=snOsmEventRmonAlarm.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.5.3|02|Enables/Disables RMon alarm notification.
SNMPItem=snOsmEventStandbyStateChange.1|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.8.1|02|Enables/Disables standby state change notification.
SNMPItem=snOsmEventStandbyStateChange.2|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.8.2|02|Enables/Disables standby state change notification.
SNMPItem=snOsmEventStandbyStateChange.3|RW|.1.3.6.1.4.1.4196.1.1.2.100.2.1.62.1.8.3|02|Enables/Disables standby state change notification.

[RMON]
SNMPItem=etherStatsBroadcastPkts.1|R|.1.3.6.1.2.1.16.1.1.1.6.1|41|The total number of good packets received that were directed to the broadcast address. Note that this does not include multicast packets.
SNMPItem=etherStatsBroadcastPkts.2|R|.1.3.6.1.2.1.16.1.1.1.6.2|41|The total number of good packets received that were directed to the broadcast address. Note that this does not include multicast packets.
SNMPItem=etherStatsBroadcastPkts.3|R|.1.3.6.1.2.1.16.1.1.1.6.3|41|The total number of good packets received that were directed to the broadcast address. Note that this does not include multicast packets.
SNMPItem=etherStatsBroadcastPkts.4|R|.1.3.6.1.2.1.16.1.1.1.6.4|41|The total number of good packets received that were directed to the broadcast address. Note that this does not include multicast packets.
SNMPItem=etherStatsBroadcastPkts.5|R|.1.3.6.1.2.1.16.1.1.1.6.5|41|The total number of good packets received that were directed to the broadcast address. Note that this does not include multicast packets.
SNMPItem=etherStatsBroadcastPkts.6|R|.1.3.6.1.2.1.16.1.1.1.6.6|41|The total number of good packets received that were directed to the broadcast address. Note that this does not include multicast packets.
SNMPItem=etherStatsBroadcastPkts.7|R|.1.3.6.1.2.1.16.1.1.1.6.7|41|The total number of good packets received that were directed to the broadcast address. Note that this does not include multicast packets.
SNMPItem=etherStatsBroadcastPkts.8|R|.1.3.6.1.2.1.16.1.1.1.6.8|41|The total number of good packets received that were directed to the broadcast address. Note that this does not include multicast packets.
SNMPItem=etherStatsCRCAlignErrors.1|R|.1.3.6.1.2.1.16.1.1.1.8.1|41|The total number of packets received that had a length (excluding framing bits, but including FCS octets) of between 64 and 1518 octets, inclusive, but but had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).
SNMPItem=etherStatsCRCAlignErrors.2|R|.1.3.6.1.2.1.16.1.1.1.8.2|41|The total number of packets received that had a length (excluding framing bits, but including FCS octets) of between 64 and 1518 octets, inclusive, but but had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).
SNMPItem=etherStatsCRCAlignErrors.3|R|.1.3.6.1.2.1.16.1.1.1.8.3|41|The total number of packets received that had a length (excluding framing bits, but including FCS octets) of between 64 and 1518 octets, inclusive, but but had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).
SNMPItem=etherStatsCRCAlignErrors.4|R|.1.3.6.1.2.1.16.1.1.1.8.4|41|The total number of packets received that had a length (excluding framing bits, but including FCS octets) of between 64 and 1518 octets, inclusive, but but had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).
SNMPItem=etherStatsCRCAlignErrors.5|R|.1.3.6.1.2.1.16.1.1.1.8.5|41|The total number of packets received that had a length (excluding framing bits, but including FCS octets) of between 64 and 1518 octets, inclusive, but but had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).
SNMPItem=etherStatsCRCAlignErrors.6|R|.1.3.6.1.2.1.16.1.1.1.8.6|41|The total number of packets received that had a length (excluding framing bits, but including FCS octets) of between 64 and 1518 octets, inclusive, but but had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).
SNMPItem=etherStatsCRCAlignErrors.7|R|.1.3.6.1.2.1.16.1.1.1.8.7|41|The total number of packets received that had a length (excluding framing bits, but including FCS octets) of between 64 and 1518 octets, inclusive, but but had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).
SNMPItem=etherStatsCRCAlignErrors.8|R|.1.3.6.1.2.1.16.1.1.1.8.8|41|The total number of packets received that had a length (excluding framing bits, but including FCS octets) of between 64 and 1518 octets, inclusive, but but had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).
SNMPItem=etherStatsCollisions.1|R|.1.3.6.1.2.1.16.1.1.1.13.1|41|The best estimate of the total number of collisions on this Ethernet segment. The value returned will depend on the location of the RMON probe. Section 8.2.1.3 (10BASE-5) and section 10.3.1.3 (10BASE-2) of IEEE standard 802.3 states that a station must detect a collision, in the receive mode, if three or more stations are transmitting simultaneously. A repeater port must detect a collision when two or more stations are transmitting simultaneously. Thus a probe placed on a repeater port could record more collisions than a probe connected to a station on the same segment would. Probe location plays a much smaller role when considering 10BASE-T. 14.2.1.4 (10BASE-T) of IEEE standard 802.3 defines a collision as the simultaneous presence of signals on the DO and RD circuits (transmitting and receiving at the same time). A 10BASE-T station can only detect collisions when it is transmitting. Thus probes placed on a station and a repeater, should report the same number of collisions. Note also that an RMON probe inside a repeater should ideally report collisions between the repeater and one or more other hosts (transmit collisions as defined by IEEE 802.3k) plus receiver collisions observed on any coax segments to which the repeater is connected.
SNMPItem=etherStatsCollisions.2|R|.1.3.6.1.2.1.16.1.1.1.13.2|41|The best estimate of the total number of collisions on this Ethernet segment. The value returned will depend on the location of the RMON probe. Section 8.2.1.3 (10BASE-5) and section 10.3.1.3 (10BASE-2) of IEEE standard 802.3 states that a station must detect a collision, in the receive mode, if three or more stations are transmitting simultaneously. A repeater port must detect a collision when two or more stations are transmitting simultaneously. Thus a probe placed on a repeater port could record more collisions than a probe connected to a station on the same segment would. Probe location plays a much smaller role when considering 10BASE-T. 14.2.1.4 (10BASE-T) of IEEE standard 802.3 defines a collision as the simultaneous presence of signals on the DO and RD circuits (transmitting and receiving at the same time). A 10BASE-T station can only detect collisions when it is transmitting. Thus probes placed on a station and a repeater, should report the same number of collisions. Note also that an RMON probe inside a repeater should ideally report collisions between the repeater and one or more other hosts (transmit collisions as defined by IEEE 802.3k) plus receiver collisions observed on any coax segments to which the repeater is connected.
SNMPItem=etherStatsCollisions.3|R|.1.3.6.1.2.1.16.1.1.1.13.3|41|The best estimate of the total number of collisions on this Ethernet segment. The value returned will depend on the location of the RMON probe. Section 8.2.1.3 (10BASE-5) and section 10.3.1.3 (10BASE-2) of IEEE standard 802.3 states that a station must detect a collision, in the receive mode, if three or more stations are transmitting simultaneously. A repeater port must detect a collision when two or more stations are transmitting simultaneously. Thus a probe placed on a repeater port could record more collisions than a probe connected to a station on the same segment would. Probe location plays a much smaller role when considering 10BASE-T. 14.2.1.4 (10BASE-T) of IEEE standard 802.3 defines a collision as the simultaneous presence of signals on the DO and RD circuits (transmitting and receiving at the same time). A 10BASE-T station can only detect collisions when it is transmitting. Thus probes placed on a station and a repeater, should report the same number of collisions. Note also that an RMON probe inside a repeater should ideally report collisions between the repeater and one or more other hosts (transmit collisions as defined by IEEE 802.3k) plus receiver collisions observed on any coax segments to which the repeater is connected.
SNMPItem=etherStatsCollisions.4|R|.1.3.6.1.2.1.16.1.1.1.13.4|41|The best estimate of the total number of collisions on this Ethernet segment. The value returned will depend on the location of the RMON probe. Section 8.2.1.3 (10BASE-5) and section 10.3.1.3 (10BASE-2) of IEEE standard 802.3 states that a station must detect a collision, in the receive mode, if three or more stations are transmitting simultaneously. A repeater port must detect a collision when two or more stations are transmitting simultaneously. Thus a probe placed on a repeater port could record more collisions than a probe connected to a station on the same segment would. Probe location plays a much smaller role when considering 10BASE-T. 14.2.1.4 (10BASE-T) of IEEE standard 802.3 defines a collision as the simultaneous presence of signals on the DO and RD circuits (transmitting and receiving at the same time). A 10BASE-T station can only detect collisions when it is transmitting. Thus probes placed on a station and a repeater, should report the same number of collisions. Note also that an RMON probe inside a repeater should ideally report collisions between the repeater and one or more other hosts (transmit collisions as defined by IEEE 802.3k) plus receiver collisions observed on any coax segments to which the repeater is connected.
SNMPItem=etherStatsCollisions.5|R|.1.3.6.1.2.1.16.1.1.1.13.5|41|The best estimate of the total number of collisions on this Ethernet segment. The value returned will depend on the location of the RMON probe. Section 8.2.1.3 (10BASE-5) and section 10.3.1.3 (10BASE-2) of IEEE standard 802.3 states that a station must detect a collision, in the receive mode, if three or more stations are transmitting simultaneously. A repeater port must detect a collision when two or more stations are transmitting simultaneously. Thus a probe placed on a repeater port could record more collisions than a probe connected to a station on the same segment would. Probe location plays a much smaller role when considering 10BASE-T. 14.2.1.4 (10BASE-T) of IEEE standard 802.3 defines a collision as the simultaneous presence of signals on the DO and RD circuits (transmitting and receiving at the same time). A 10BASE-T station can only detect collisions when it is transmitting. Thus probes placed on a station and a repeater, should report the same number of collisions. Note also that an RMON probe inside a repeater should ideally report collisions between the repeater and one or more other hosts (transmit collisions as defined by IEEE 802.3k) plus receiver collisions observed on any coax segments to which the repeater is connected.
SNMPItem=etherStatsCollisions.6|R|.1.3.6.1.2.1.16.1.1.1.13.6|41|The best estimate of the total number of collisions on this Ethernet segment. The value returned will depend on the location of the RMON probe. Section 8.2.1.3 (10BASE-5) and section 10.3.1.3 (10BASE-2) of IEEE standard 802.3 states that a station must detect a collision, in the receive mode, if three or more stations are transmitting simultaneously. A repeater port must detect a collision when two or more stations are transmitting simultaneously. Thus a probe placed on a repeater port could record more collisions than a probe connected to a station on the same segment would. Probe location plays a much smaller role when considering 10BASE-T. 14.2.1.4 (10BASE-T) of IEEE standard 802.3 defines a collision as the simultaneous presence of signals on the DO and RD circuits (transmitting and receiving at the same time). A 10BASE-T station can only detect collisions when it is transmitting. Thus probes placed on a station and a repeater, should report the same number of collisions. Note also that an RMON probe inside a repeater should ideally report collisions between the repeater and one or more other hosts (transmit collisions as defined by IEEE 802.3k) plus receiver collisions observed on any coax segments to which the repeater is connected.
SNMPItem=etherStatsCollisions.7|R|.1.3.6.1.2.1.16.1.1.1.13.7|41|The best estimate of the total number of collisions on this Ethernet segment. The value returned will depend on the location of the RMON probe. Section 8.2.1.3 (10BASE-5) and section 10.3.1.3 (10BASE-2) of IEEE standard 802.3 states that a station must detect a collision, in the receive mode, if three or more stations are transmitting simultaneously. A repeater port must detect a collision when two or more stations are transmitting simultaneously. Thus a probe placed on a repeater port could record more collisions than a probe connected to a station on the same segment would. Probe location plays a much smaller role when considering 10BASE-T. 14.2.1.4 (10BASE-T) of IEEE standard 802.3 defines a collision as the simultaneous presence of signals on the DO and RD circuits (transmitting and receiving at the same time). A 10BASE-T station can only detect collisions when it is transmitting. Thus probes placed on a station and a repeater, should report the same number of collisions. Note also that an RMON probe inside a repeater should ideally report collisions between the repeater and one or more other hosts (transmit collisions as defined by IEEE 802.3k) plus receiver collisions observed on any coax segments to which the repeater is connected.
SNMPItem=etherStatsCollisions.8|R|.1.3.6.1.2.1.16.1.1.1.13.8|41|The best estimate of the total number of collisions on this Ethernet segment. The value returned will depend on the location of the RMON probe. Section 8.2.1.3 (10BASE-5) and section 10.3.1.3 (10BASE-2) of IEEE standard 802.3 states that a station must detect a collision, in the receive mode, if three or more stations are transmitting simultaneously. A repeater port must detect a collision when two or more stations are transmitting simultaneously. Thus a probe placed on a repeater port could record more collisions than a probe connected to a station on the same segment would. Probe location plays a much smaller role when considering 10BASE-T. 14.2.1.4 (10BASE-T) of IEEE standard 802.3 defines a collision as the simultaneous presence of signals on the DO and RD circuits (transmitting and receiving at the same time). A 10BASE-T station can only detect collisions when it is transmitting. Thus probes placed on a station and a repeater, should report the same number of collisions. Note also that an RMON probe inside a repeater should ideally report collisions between the repeater and one or more other hosts (transmit collisions as defined by IEEE 802.3k) plus receiver collisions observed on any coax segments to which the repeater is connected.
SNMPItem=etherStatsDataSource.1|RW|.1.3.6.1.2.1.16.1.1.1.2.1|06|This object identifies the source of the data that this etherStats entry is configured to analyze. This source can be any ethernet interface on this device. In order to identify a particular interface, this object shall identify the instance of the ifIndex object, defined in RFC 1213 and RFC 1573 {4,6}, for the desired interface. For example, if an entry were to receive data from interface #1, this object would be set to ifIndex.1. The statistics in this group reflect all packets on the local network segment attached to the identified interface. An agent may or may not be able to tell if fundamental changes to the media of the interface have occurred and necessitate an invalidation of this entry. For example, a hot-pluggable ethernet card could be pulled out and replaced by a token-ring card. In such a case, if the agent has such knowledge of the change, it is recommended that it invalidate this entry. This object may not be modified if the associated etherStatsStatus object is equal to valid(1).
SNMPItem=etherStatsDataSource.2|RW|.1.3.6.1.2.1.16.1.1.1.2.2|06|This object identifies the source of the data that this etherStats entry is configured to analyze. This source can be any ethernet interface on this device. In order to identify a particular interface, this object shall identify the instance of the ifIndex object, defined in RFC 1213 and RFC 1573 {4,6}, for the desired interface. For example, if an entry were to receive data from interface #1, this object would be set to ifIndex.1. The statistics in this group reflect all packets on the local network segment attached to the identified interface. An agent may or may not be able to tell if fundamental changes to the media of the interface have occurred and necessitate an invalidation of this entry. For example, a hot-pluggable ethernet card could be pulled out and replaced by a token-ring card. In such a case, if the agent has such knowledge of the change, it is recommended that it invalidate this entry. This object may not be modified if the associated etherStatsStatus object is equal to valid(1).
SNMPItem=etherStatsDataSource.3|RW|.1.3.6.1.2.1.16.1.1.1.2.3|06|This object identifies the source of the data that this etherStats entry is configured to analyze. This source can be any ethernet interface on this device. In order to identify a particular interface, this object shall identify the instance of the ifIndex object, defined in RFC 1213 and RFC 1573 {4,6}, for the desired interface. For example, if an entry were to receive data from interface #1, this object would be set to ifIndex.1. The statistics in this group reflect all packets on the local network segment attached to the identified interface. An agent may or may not be able to tell if fundamental changes to the media of the interface have occurred and necessitate an invalidation of this entry. For example, a hot-pluggable ethernet card could be pulled out and replaced by a token-ring card. In such a case, if the agent has such knowledge of the change, it is recommended that it invalidate this entry. This object may not be modified if the associated etherStatsStatus object is equal to valid(1).
SNMPItem=etherStatsDataSource.4|RW|.1.3.6.1.2.1.16.1.1.1.2.4|06|This object identifies the source of the data that this etherStats entry is configured to analyze. This source can be any ethernet interface on this device. In order to identify a particular interface, this object shall identify the instance of the ifIndex object, defined in RFC 1213 and RFC 1573 {4,6}, for the desired interface. For example, if an entry were to receive data from interface #1, this object would be set to ifIndex.1. The statistics in this group reflect all packets on the local network segment attached to the identified interface. An agent may or may not be able to tell if fundamental changes to the media of the interface have occurred and necessitate an invalidation of this entry. For example, a hot-pluggable ethernet card could be pulled out and replaced by a token-ring card. In such a case, if the agent has such knowledge of the change, it is recommended that it invalidate this entry. This object may not be modified if the associated etherStatsStatus object is equal to valid(1).
SNMPItem=etherStatsDataSource.5|RW|.1.3.6.1.2.1.16.1.1.1.2.5|06|This object identifies the source of the data that this etherStats entry is configured to analyze. This source can be any ethernet interface on this device. In order to identify a particular interface, this object shall identify the instance of the ifIndex object, defined in RFC 1213 and RFC 1573 {4,6}, for the desired interface. For example, if an entry were to receive data from interface #1, this object would be set to ifIndex.1. The statistics in this group reflect all packets on the local network segment attached to the identified interface. An agent may or may not be able to tell if fundamental changes to the media of the interface have occurred and necessitate an invalidation of this entry. For example, a hot-pluggable ethernet card could be pulled out and replaced by a token-ring card. In such a case, if the agent has such knowledge of the change, it is recommended that it invalidate this entry. This object may not be modified if the associated etherStatsStatus object is equal to valid(1).
SNMPItem=etherStatsDataSource.6|RW|.1.3.6.1.2.1.16.1.1.1.2.6|06|This object identifies the source of the data that this etherStats entry is configured to analyze. This source can be any ethernet interface on this device. In order to identify a particular interface, this object shall identify the instance of the ifIndex object, defined in RFC 1213 and RFC 1573 {4,6}, for the desired interface. For example, if an entry were to receive data from interface #1, this object would be set to ifIndex.1. The statistics in this group reflect all packets on the local network segment attached to the identified interface. An agent may or may not be able to tell if fundamental changes to the media of the interface have occurred and necessitate an invalidation of this entry. For example, a hot-pluggable ethernet card could be pulled out and replaced by a token-ring card. In such a case, if the agent has such knowledge of the change, it is recommended that it invalidate this entry. This object may not be modified if the associated etherStatsStatus object is equal to valid(1).
SNMPItem=etherStatsDataSource.7|RW|.1.3.6.1.2.1.16.1.1.1.2.7|06|This object identifies the source of the data that this etherStats entry is configured to analyze. This source can be any ethernet interface on this device. In order to identify a particular interface, this object shall identify the instance of the ifIndex object, defined in RFC 1213 and RFC 1573 {4,6}, for the desired interface. For example, if an entry were to receive data from interface #1, this object would be set to ifIndex.1. The statistics in this group reflect all packets on the local network segment attached to the identified interface. An agent may or may not be able to tell if fundamental changes to the media of the interface have occurred and necessitate an invalidation of this entry. For example, a hot-pluggable ethernet card could be pulled out and replaced by a token-ring card. In such a case, if the agent has such knowledge of the change, it is recommended that it invalidate this entry. This object may not be modified if the associated etherStatsStatus object is equal to valid(1).
SNMPItem=etherStatsDataSource.8|RW|.1.3.6.1.2.1.16.1.1.1.2.8|06|This object identifies the source of the data that this etherStats entry is configured to analyze. This source can be any ethernet interface on this device. In order to identify a particular interface, this object shall identify the instance of the ifIndex object, defined in RFC 1213 and RFC 1573 {4,6}, for the desired interface. For example, if an entry were to receive data from interface #1, this object would be set to ifIndex.1. The statistics in this group reflect all packets on the local network segment attached to the identified interface. An agent may or may not be able to tell if fundamental changes to the media of the interface have occurred and necessitate an invalidation of this entry. For example, a hot-pluggable ethernet card could be pulled out and replaced by a token-ring card. In such a case, if the agent has such knowledge of the change, it is recommended that it invalidate this entry. This object may not be modified if the associated etherStatsStatus object is equal to valid(1).
SNMPItem=etherStatsDropEvents.1|R|.1.3.6.1.2.1.16.1.1.1.3.1|41|The total number of events in which packets were dropped by the probe due to lack of resources. Note that this number is not necessarily the number of packets dropped/ it is just the number of times this condition has been detected.
SNMPItem=etherStatsDropEvents.2|R|.1.3.6.1.2.1.16.1.1.1.3.2|41|The total number of events in which packets were dropped by the probe due to lack of resources. Note that this number is not necessarily the number of packets dropped/ it is just the number of times this condition has been detected.
SNMPItem=etherStatsDropEvents.3|R|.1.3.6.1.2.1.16.1.1.1.3.3|41|The total number of events in which packets were dropped by the probe due to lack of resources. Note that this number is not necessarily the number of packets dropped/ it is just the number of times this condition has been detected.
SNMPItem=etherStatsDropEvents.4|R|.1.3.6.1.2.1.16.1.1.1.3.4|41|The total number of events in which packets were dropped by the probe due to lack of resources. Note that this number is not necessarily the number of packets dropped/ it is just the number of times this condition has been detected.
SNMPItem=etherStatsDropEvents.5|R|.1.3.6.1.2.1.16.1.1.1.3.5|41|The total number of events in which packets were dropped by the probe due to lack of resources. Note that this number is not necessarily the number of packets dropped/ it is just the number of times this condition has been detected.
SNMPItem=etherStatsDropEvents.6|R|.1.3.6.1.2.1.16.1.1.1.3.6|41|The total number of events in which packets were dropped by the probe due to lack of resources. Note that this number is not necessarily the number of packets dropped/ it is just the number of times this condition has been detected.
SNMPItem=etherStatsDropEvents.7|R|.1.3.6.1.2.1.16.1.1.1.3.7|41|The total number of events in which packets were dropped by the probe due to lack of resources. Note that this number is not necessarily the number of packets dropped/ it is just the number of times this condition has been detected.
SNMPItem=etherStatsDropEvents.8|R|.1.3.6.1.2.1.16.1.1.1.3.8|41|The total number of events in which packets were dropped by the probe due to lack of resources. Note that this number is not necessarily the number of packets dropped/ it is just the number of times this condition has been detected.
SNMPItem=etherStatsFragments.1|R|.1.3.6.1.2.1.16.1.1.1.11.1|41|The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that it is entirely normal for etherStatsFragments to increment. This is because it counts both runts (which are normal occurrences due to collisions) and noise hits.
SNMPItem=etherStatsFragments.2|R|.1.3.6.1.2.1.16.1.1.1.11.2|41|The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that it is entirely normal for etherStatsFragments to increment. This is because it counts both runts (which are normal occurrences due to collisions) and noise hits.
SNMPItem=etherStatsFragments.3|R|.1.3.6.1.2.1.16.1.1.1.11.3|41|The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that it is entirely normal for etherStatsFragments to increment. This is because it counts both runts (which are normal occurrences due to collisions) and noise hits.
SNMPItem=etherStatsFragments.4|R|.1.3.6.1.2.1.16.1.1.1.11.4|41|The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that it is entirely normal for etherStatsFragments to increment. This is because it counts both runts (which are normal occurrences due to collisions) and noise hits.
SNMPItem=etherStatsFragments.5|R|.1.3.6.1.2.1.16.1.1.1.11.5|41|The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that it is entirely normal for etherStatsFragments to increment. This is because it counts both runts (which are normal occurrences due to collisions) and noise hits.
SNMPItem=etherStatsFragments.6|R|.1.3.6.1.2.1.16.1.1.1.11.6|41|The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that it is entirely normal for etherStatsFragments to increment. This is because it counts both runts (which are normal occurrences due to collisions) and noise hits.
SNMPItem=etherStatsFragments.7|R|.1.3.6.1.2.1.16.1.1.1.11.7|41|The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that it is entirely normal for etherStatsFragments to increment. This is because it counts both runts (which are normal occurrences due to collisions) and noise hits.
SNMPItem=etherStatsFragments.8|R|.1.3.6.1.2.1.16.1.1.1.11.8|41|The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that it is entirely normal for etherStatsFragments to increment. This is because it counts both runts (which are normal occurrences due to collisions) and noise hits.
SNMPItem=etherStatsIndex.1|R|.1.3.6.1.2.1.16.1.1.1.1.1|02|The value of this object uniquely identifies this etherStats entry.
SNMPItem=etherStatsIndex.2|R|.1.3.6.1.2.1.16.1.1.1.1.2|02|The value of this object uniquely identifies this etherStats entry.
SNMPItem=etherStatsIndex.3|R|.1.3.6.1.2.1.16.1.1.1.1.3|02|The value of this object uniquely identifies this etherStats entry.
SNMPItem=etherStatsIndex.4|R|.1.3.6.1.2.1.16.1.1.1.1.4|02|The value of this object uniquely identifies this etherStats entry.
SNMPItem=etherStatsIndex.5|R|.1.3.6.1.2.1.16.1.1.1.1.5|02|The value of this object uniquely identifies this etherStats entry.
SNMPItem=etherStatsIndex.6|R|.1.3.6.1.2.1.16.1.1.1.1.6|02|The value of this object uniquely identifies this etherStats entry.
SNMPItem=etherStatsIndex.7|R|.1.3.6.1.2.1.16.1.1.1.1.7|02|The value of this object uniquely identifies this etherStats entry.
SNMPItem=etherStatsIndex.8|R|.1.3.6.1.2.1.16.1.1.1.1.8|02|The value of this object uniquely identifies this etherStats entry.
SNMPItem=etherStatsJabbers.1|R|.1.3.6.1.2.1.16.1.1.1.12.1|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that this definition of jabber is different than the definition in IEEE-802.3 section 8.2.1.5 (10BASE5) and section 10.3.1.4 (10BASE2). These documents define jabber as the condition where any packet exceeds 20 ms. The allowed range to detect jabber is between 20 ms and 150 ms.
SNMPItem=etherStatsJabbers.2|R|.1.3.6.1.2.1.16.1.1.1.12.2|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that this definition of jabber is different than the definition in IEEE-802.3 section 8.2.1.5 (10BASE5) and section 10.3.1.4 (10BASE2). These documents define jabber as the condition where any packet exceeds 20 ms. The allowed range to detect jabber is between 20 ms and 150 ms.
SNMPItem=etherStatsJabbers.3|R|.1.3.6.1.2.1.16.1.1.1.12.3|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that this definition of jabber is different than the definition in IEEE-802.3 section 8.2.1.5 (10BASE5) and section 10.3.1.4 (10BASE2). These documents define jabber as the condition where any packet exceeds 20 ms. The allowed range to detect jabber is between 20 ms and 150 ms.
SNMPItem=etherStatsJabbers.4|R|.1.3.6.1.2.1.16.1.1.1.12.4|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that this definition of jabber is different than the definition in IEEE-802.3 section 8.2.1.5 (10BASE5) and section 10.3.1.4 (10BASE2). These documents define jabber as the condition where any packet exceeds 20 ms. The allowed range to detect jabber is between 20 ms and 150 ms.
SNMPItem=etherStatsJabbers.5|R|.1.3.6.1.2.1.16.1.1.1.12.5|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that this definition of jabber is different than the definition in IEEE-802.3 section 8.2.1.5 (10BASE5) and section 10.3.1.4 (10BASE2). These documents define jabber as the condition where any packet exceeds 20 ms. The allowed range to detect jabber is between 20 ms and 150 ms.
SNMPItem=etherStatsJabbers.6|R|.1.3.6.1.2.1.16.1.1.1.12.6|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that this definition of jabber is different than the definition in IEEE-802.3 section 8.2.1.5 (10BASE5) and section 10.3.1.4 (10BASE2). These documents define jabber as the condition where any packet exceeds 20 ms. The allowed range to detect jabber is between 20 ms and 150 ms.
SNMPItem=etherStatsJabbers.7|R|.1.3.6.1.2.1.16.1.1.1.12.7|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that this definition of jabber is different than the definition in IEEE-802.3 section 8.2.1.5 (10BASE5) and section 10.3.1.4 (10BASE2). These documents define jabber as the condition where any packet exceeds 20 ms. The allowed range to detect jabber is between 20 ms and 150 ms.
SNMPItem=etherStatsJabbers.8|R|.1.3.6.1.2.1.16.1.1.1.12.8|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error). Note that this definition of jabber is different than the definition in IEEE-802.3 section 8.2.1.5 (10BASE5) and section 10.3.1.4 (10BASE2). These documents define jabber as the condition where any packet exceeds 20 ms. The allowed range to detect jabber is between 20 ms and 150 ms.
SNMPItem=etherStatsMulticastPkts.1|R|.1.3.6.1.2.1.16.1.1.1.7.1|41|The total number of good packets received that were directed to a multicast address. Note that this number does not include packets directed to the broadcast address.
SNMPItem=etherStatsMulticastPkts.2|R|.1.3.6.1.2.1.16.1.1.1.7.2|41|The total number of good packets received that were directed to a multicast address. Note that this number does not include packets directed to the broadcast address.
SNMPItem=etherStatsMulticastPkts.3|R|.1.3.6.1.2.1.16.1.1.1.7.3|41|The total number of good packets received that were directed to a multicast address. Note that this number does not include packets directed to the broadcast address.
SNMPItem=etherStatsMulticastPkts.4|R|.1.3.6.1.2.1.16.1.1.1.7.4|41|The total number of good packets received that were directed to a multicast address. Note that this number does not include packets directed to the broadcast address.
SNMPItem=etherStatsMulticastPkts.5|R|.1.3.6.1.2.1.16.1.1.1.7.5|41|The total number of good packets received that were directed to a multicast address. Note that this number does not include packets directed to the broadcast address.
SNMPItem=etherStatsMulticastPkts.6|R|.1.3.6.1.2.1.16.1.1.1.7.6|41|The total number of good packets received that were directed to a multicast address. Note that this number does not include packets directed to the broadcast address.
SNMPItem=etherStatsMulticastPkts.7|R|.1.3.6.1.2.1.16.1.1.1.7.7|41|The total number of good packets received that were directed to a multicast address. Note that this number does not include packets directed to the broadcast address.
SNMPItem=etherStatsMulticastPkts.8|R|.1.3.6.1.2.1.16.1.1.1.7.8|41|The total number of good packets received that were directed to a multicast address. Note that this number does not include packets directed to the broadcast address.
SNMPItem=etherStatsOctets.1|R|.1.3.6.1.2.1.16.1.1.1.4.1|41|The total number of octets of data (including those in bad packets) received on the network (excluding framing bits but including FCS octets). This object can be used as a reasonable estimate of ethernet utilization. If greater precision is desired, the etherStatsPkts and etherStatsOctets objects should be sampled before and after a common interval. The differences in the sampled values are Pkts and Octets, respectively, and the number of seconds in the interval is Interval. These values are used to calculate the Utilization as follows: Pkts * (9.6 + 6.4) + (Octets * .8) Utilization = ------------------------------------- Interval * 10,000 The result of this equation is the value Utilization which is the percent utilization of the ethernet segment on a scale of 0 to 100 percent.
SNMPItem=etherStatsOctets.2|R|.1.3.6.1.2.1.16.1.1.1.4.2|41|The total number of octets of data (including those in bad packets) received on the network (excluding framing bits but including FCS octets). This object can be used as a reasonable estimate of ethernet utilization. If greater precision is desired, the etherStatsPkts and etherStatsOctets objects should be sampled before and after a common interval. The differences in the sampled values are Pkts and Octets, respectively, and the number of seconds in the interval is Interval. These values are used to calculate the Utilization as follows: Pkts * (9.6 + 6.4) + (Octets * .8) Utilization = ------------------------------------- Interval * 10,000 The result of this equation is the value Utilization which is the percent utilization of the ethernet segment on a scale of 0 to 100 percent.
SNMPItem=etherStatsOctets.3|R|.1.3.6.1.2.1.16.1.1.1.4.3|41|The total number of octets of data (including those in bad packets) received on the network (excluding framing bits but including FCS octets). This object can be used as a reasonable estimate of ethernet utilization. If greater precision is desired, the etherStatsPkts and etherStatsOctets objects should be sampled before and after a common interval. The differences in the sampled values are Pkts and Octets, respectively, and the number of seconds in the interval is Interval. These values are used to calculate the Utilization as follows: Pkts * (9.6 + 6.4) + (Octets * .8) Utilization = ------------------------------------- Interval * 10,000 The result of this equation is the value Utilization which is the percent utilization of the ethernet segment on a scale of 0 to 100 percent.
SNMPItem=etherStatsOctets.4|R|.1.3.6.1.2.1.16.1.1.1.4.4|41|The total number of octets of data (including those in bad packets) received on the network (excluding framing bits but including FCS octets). This object can be used as a reasonable estimate of ethernet utilization. If greater precision is desired, the etherStatsPkts and etherStatsOctets objects should be sampled before and after a common interval. The differences in the sampled values are Pkts and Octets, respectively, and the number of seconds in the interval is Interval. These values are used to calculate the Utilization as follows: Pkts * (9.6 + 6.4) + (Octets * .8) Utilization = ------------------------------------- Interval * 10,000 The result of this equation is the value Utilization which is the percent utilization of the ethernet segment on a scale of 0 to 100 percent.
SNMPItem=etherStatsOctets.5|R|.1.3.6.1.2.1.16.1.1.1.4.5|41|The total number of octets of data (including those in bad packets) received on the network (excluding framing bits but including FCS octets). This object can be used as a reasonable estimate of ethernet utilization. If greater precision is desired, the etherStatsPkts and etherStatsOctets objects should be sampled before and after a common interval. The differences in the sampled values are Pkts and Octets, respectively, and the number of seconds in the interval is Interval. These values are used to calculate the Utilization as follows: Pkts * (9.6 + 6.4) + (Octets * .8) Utilization = ------------------------------------- Interval * 10,000 The result of this equation is the value Utilization which is the percent utilization of the ethernet segment on a scale of 0 to 100 percent.
SNMPItem=etherStatsOctets.6|R|.1.3.6.1.2.1.16.1.1.1.4.6|41|The total number of octets of data (including those in bad packets) received on the network (excluding framing bits but including FCS octets). This object can be used as a reasonable estimate of ethernet utilization. If greater precision is desired, the etherStatsPkts and etherStatsOctets objects should be sampled before and after a common interval. The differences in the sampled values are Pkts and Octets, respectively, and the number of seconds in the interval is Interval. These values are used to calculate the Utilization as follows: Pkts * (9.6 + 6.4) + (Octets * .8) Utilization = ------------------------------------- Interval * 10,000 The result of this equation is the value Utilization which is the percent utilization of the ethernet segment on a scale of 0 to 100 percent.
SNMPItem=etherStatsOctets.7|R|.1.3.6.1.2.1.16.1.1.1.4.7|41|The total number of octets of data (including those in bad packets) received on the network (excluding framing bits but including FCS octets). This object can be used as a reasonable estimate of ethernet utilization. If greater precision is desired, the etherStatsPkts and etherStatsOctets objects should be sampled before and after a common interval. The differences in the sampled values are Pkts and Octets, respectively, and the number of seconds in the interval is Interval. These values are used to calculate the Utilization as follows: Pkts * (9.6 + 6.4) + (Octets * .8) Utilization = ------------------------------------- Interval * 10,000 The result of this equation is the value Utilization which is the percent utilization of the ethernet segment on a scale of 0 to 100 percent.
SNMPItem=etherStatsOctets.8|R|.1.3.6.1.2.1.16.1.1.1.4.8|41|The total number of octets of data (including those in bad packets) received on the network (excluding framing bits but including FCS octets). This object can be used as a reasonable estimate of ethernet utilization. If greater precision is desired, the etherStatsPkts and etherStatsOctets objects should be sampled before and after a common interval. The differences in the sampled values are Pkts and Octets, respectively, and the number of seconds in the interval is Interval. These values are used to calculate the Utilization as follows: Pkts * (9.6 + 6.4) + (Octets * .8) Utilization = ------------------------------------- Interval * 10,000 The result of this equation is the value Utilization which is the percent utilization of the ethernet segment on a scale of 0 to 100 percent.
SNMPItem=etherStatsOversizePkts.1|R|.1.3.6.1.2.1.16.1.1.1.10.1|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsOversizePkts.2|R|.1.3.6.1.2.1.16.1.1.1.10.2|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsOversizePkts.3|R|.1.3.6.1.2.1.16.1.1.1.10.3|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsOversizePkts.4|R|.1.3.6.1.2.1.16.1.1.1.10.4|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsOversizePkts.5|R|.1.3.6.1.2.1.16.1.1.1.10.5|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsOversizePkts.6|R|.1.3.6.1.2.1.16.1.1.1.10.6|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsOversizePkts.7|R|.1.3.6.1.2.1.16.1.1.1.10.7|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsOversizePkts.8|R|.1.3.6.1.2.1.16.1.1.1.10.8|41|The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsOwner.1|RW|.1.3.6.1.2.1.16.1.1.1.20.1|04|The entity that configured this entry and is therefore using the resources assigned to it.
SNMPItem=etherStatsOwner.2|RW|.1.3.6.1.2.1.16.1.1.1.20.2|04|The entity that configured this entry and is therefore using the resources assigned to it.
SNMPItem=etherStatsOwner.3|RW|.1.3.6.1.2.1.16.1.1.1.20.3|04|The entity that configured this entry and is therefore using the resources assigned to it.
SNMPItem=etherStatsOwner.4|RW|.1.3.6.1.2.1.16.1.1.1.20.4|04|The entity that configured this entry and is therefore using the resources assigned to it.
SNMPItem=etherStatsOwner.5|RW|.1.3.6.1.2.1.16.1.1.1.20.5|04|The entity that configured this entry and is therefore using the resources assigned to it.
SNMPItem=etherStatsOwner.6|RW|.1.3.6.1.2.1.16.1.1.1.20.6|04|The entity that configured this entry and is therefore using the resources assigned to it.
SNMPItem=etherStatsOwner.7|RW|.1.3.6.1.2.1.16.1.1.1.20.7|04|The entity that configured this entry and is therefore using the resources assigned to it.
SNMPItem=etherStatsOwner.8|RW|.1.3.6.1.2.1.16.1.1.1.20.8|04|The entity that configured this entry and is therefore using the resources assigned to it.
SNMPItem=etherStatsPkts.1|R|.1.3.6.1.2.1.16.1.1.1.5.1|41|The total number of packets (including bad packets, broadcast packets, and multicast packets) received.
SNMPItem=etherStatsPkts.2|R|.1.3.6.1.2.1.16.1.1.1.5.2|41|The total number of packets (including bad packets, broadcast packets, and multicast packets) received.
SNMPItem=etherStatsPkts.3|R|.1.3.6.1.2.1.16.1.1.1.5.3|41|The total number of packets (including bad packets, broadcast packets, and multicast packets) received.
SNMPItem=etherStatsPkts.4|R|.1.3.6.1.2.1.16.1.1.1.5.4|41|The total number of packets (including bad packets, broadcast packets, and multicast packets) received.
SNMPItem=etherStatsPkts.5|R|.1.3.6.1.2.1.16.1.1.1.5.5|41|The total number of packets (including bad packets, broadcast packets, and multicast packets) received.
SNMPItem=etherStatsPkts.6|R|.1.3.6.1.2.1.16.1.1.1.5.6|41|The total number of packets (including bad packets, broadcast packets, and multicast packets) received.
SNMPItem=etherStatsPkts.7|R|.1.3.6.1.2.1.16.1.1.1.5.7|41|The total number of packets (including bad packets, broadcast packets, and multicast packets) received.
SNMPItem=etherStatsPkts.8|R|.1.3.6.1.2.1.16.1.1.1.5.8|41|The total number of packets (including bad packets, broadcast packets, and multicast packets) received.
SNMPItem=etherStatsPkts1024to1518Octets.1|R|.1.3.6.1.2.1.16.1.1.1.19.1|41|The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts1024to1518Octets.2|R|.1.3.6.1.2.1.16.1.1.1.19.2|41|The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts1024to1518Octets.3|R|.1.3.6.1.2.1.16.1.1.1.19.3|41|The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts1024to1518Octets.4|R|.1.3.6.1.2.1.16.1.1.1.19.4|41|The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts1024to1518Octets.5|R|.1.3.6.1.2.1.16.1.1.1.19.5|41|The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts1024to1518Octets.6|R|.1.3.6.1.2.1.16.1.1.1.19.6|41|The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts1024to1518Octets.7|R|.1.3.6.1.2.1.16.1.1.1.19.7|41|The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts1024to1518Octets.8|R|.1.3.6.1.2.1.16.1.1.1.19.8|41|The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts128to255Octets.1|R|.1.3.6.1.2.1.16.1.1.1.16.1|41|The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts128to255Octets.2|R|.1.3.6.1.2.1.16.1.1.1.16.2|41|The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts128to255Octets.3|R|.1.3.6.1.2.1.16.1.1.1.16.3|41|The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts128to255Octets.4|R|.1.3.6.1.2.1.16.1.1.1.16.4|41|The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts128to255Octets.5|R|.1.3.6.1.2.1.16.1.1.1.16.5|41|The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts128to255Octets.6|R|.1.3.6.1.2.1.16.1.1.1.16.6|41|The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts128to255Octets.7|R|.1.3.6.1.2.1.16.1.1.1.16.7|41|The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts128to255Octets.8|R|.1.3.6.1.2.1.16.1.1.1.16.8|41|The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts256to511Octets.1|R|.1.3.6.1.2.1.16.1.1.1.17.1|41|The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts256to511Octets.2|R|.1.3.6.1.2.1.16.1.1.1.17.2|41|The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts256to511Octets.3|R|.1.3.6.1.2.1.16.1.1.1.17.3|41|The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts256to511Octets.4|R|.1.3.6.1.2.1.16.1.1.1.17.4|41|The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts256to511Octets.5|R|.1.3.6.1.2.1.16.1.1.1.17.5|41|The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts256to511Octets.6|R|.1.3.6.1.2.1.16.1.1.1.17.6|41|The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts256to511Octets.7|R|.1.3.6.1.2.1.16.1.1.1.17.7|41|The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts256to511Octets.8|R|.1.3.6.1.2.1.16.1.1.1.17.8|41|The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts512to1023Octets.1|R|.1.3.6.1.2.1.16.1.1.1.18.1|41|The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts512to1023Octets.2|R|.1.3.6.1.2.1.16.1.1.1.18.2|41|The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts512to1023Octets.3|R|.1.3.6.1.2.1.16.1.1.1.18.3|41|The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts512to1023Octets.4|R|.1.3.6.1.2.1.16.1.1.1.18.4|41|The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts512to1023Octets.5|R|.1.3.6.1.2.1.16.1.1.1.18.5|41|The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts512to1023Octets.6|R|.1.3.6.1.2.1.16.1.1.1.18.6|41|The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts512to1023Octets.7|R|.1.3.6.1.2.1.16.1.1.1.18.7|41|The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts512to1023Octets.8|R|.1.3.6.1.2.1.16.1.1.1.18.8|41|The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts64Octets.1|R|.1.3.6.1.2.1.16.1.1.1.14.1|41|The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts64Octets.2|R|.1.3.6.1.2.1.16.1.1.1.14.2|41|The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts64Octets.3|R|.1.3.6.1.2.1.16.1.1.1.14.3|41|The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts64Octets.4|R|.1.3.6.1.2.1.16.1.1.1.14.4|41|The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts64Octets.5|R|.1.3.6.1.2.1.16.1.1.1.14.5|41|The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts64Octets.6|R|.1.3.6.1.2.1.16.1.1.1.14.6|41|The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts64Octets.7|R|.1.3.6.1.2.1.16.1.1.1.14.7|41|The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts64Octets.8|R|.1.3.6.1.2.1.16.1.1.1.14.8|41|The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts65to127Octets.1|R|.1.3.6.1.2.1.16.1.1.1.15.1|41|The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts65to127Octets.2|R|.1.3.6.1.2.1.16.1.1.1.15.2|41|The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts65to127Octets.3|R|.1.3.6.1.2.1.16.1.1.1.15.3|41|The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts65to127Octets.4|R|.1.3.6.1.2.1.16.1.1.1.15.4|41|The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts65to127Octets.5|R|.1.3.6.1.2.1.16.1.1.1.15.5|41|The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts65to127Octets.6|R|.1.3.6.1.2.1.16.1.1.1.15.6|41|The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts65to127Octets.7|R|.1.3.6.1.2.1.16.1.1.1.15.7|41|The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsPkts65to127Octets.8|R|.1.3.6.1.2.1.16.1.1.1.15.8|41|The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).
SNMPItem=etherStatsStatus.1|RW|.1.3.6.1.2.1.16.1.1.1.21.1|02|The status of this etherStats entry.
SNMPItem=etherStatsStatus.2|RW|.1.3.6.1.2.1.16.1.1.1.21.2|02|The status of this etherStats entry.
SNMPItem=etherStatsStatus.3|RW|.1.3.6.1.2.1.16.1.1.1.21.3|02|The status of this etherStats entry.
SNMPItem=etherStatsStatus.4|RW|.1.3.6.1.2.1.16.1.1.1.21.4|02|The status of this etherStats entry.
SNMPItem=etherStatsStatus.5|RW|.1.3.6.1.2.1.16.1.1.1.21.5|02|The status of this etherStats entry.
SNMPItem=etherStatsStatus.6|RW|.1.3.6.1.2.1.16.1.1.1.21.6|02|The status of this etherStats entry.
SNMPItem=etherStatsStatus.7|RW|.1.3.6.1.2.1.16.1.1.1.21.7|02|The status of this etherStats entry.
SNMPItem=etherStatsStatus.8|RW|.1.3.6.1.2.1.16.1.1.1.21.8|02|The status of this etherStats entry.
SNMPItem=etherStatsUndersizePkts.1|R|.1.3.6.1.2.1.16.1.1.1.9.1|41|The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsUndersizePkts.2|R|.1.3.6.1.2.1.16.1.1.1.9.2|41|The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsUndersizePkts.3|R|.1.3.6.1.2.1.16.1.1.1.9.3|41|The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsUndersizePkts.4|R|.1.3.6.1.2.1.16.1.1.1.9.4|41|The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsUndersizePkts.5|R|.1.3.6.1.2.1.16.1.1.1.9.5|41|The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsUndersizePkts.6|R|.1.3.6.1.2.1.16.1.1.1.9.6|41|The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsUndersizePkts.7|R|.1.3.6.1.2.1.16.1.1.1.9.7|41|The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.
SNMPItem=etherStatsUndersizePkts.8|R|.1.3.6.1.2.1.16.1.1.1.9.8|41|The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.

[SNMP]
SNMPItem=snmpEnableAuthenTraps|RW|.1.3.6.1.2.1.11.30.0|02|Indicates whether the SNMP agent process is permitted to generate authentication-failure traps. The value of this object overrides any configuration information/ as such, it provides a means whereby all authentication-failure traps may be disabled. Note that it is strongly recommended that this object be stored in non-volatile memory so that it remains constant between re-initializations of the network management system.
SNMPItem=snmpInASNParseErrs|R|.1.3.6.1.2.1.11.6.0|41|The total number of ASN.1 or BER errors encountered by the SNMP protocol entity when decoding received SNMP Messages.
SNMPItem=snmpInBadCommunityNames|R|.1.3.6.1.2.1.11.4.0|41|The total number of SNMP Messages delivered to the SNMP protocol entity which used a SNMP community name not known to said entity.
SNMPItem=snmpInBadCommunityUses|R|.1.3.6.1.2.1.11.5.0|41|The total number of SNMP Messages delivered to the SNMP protocol entity which represented an SNMP operation which was not allowed by the SNMP community named in the Message.
SNMPItem=snmpInBadValues|R|.1.3.6.1.2.1.11.10.0|41|The total number of SNMP PDUs which were delivered to the SNMP protocol entity and for which the value of the error-status field is `badValue'.
SNMPItem=snmpInBadVersions|R|.1.3.6.1.2.1.11.3.0|41|The total number of SNMP Messages which were delivered to the SNMP protocol entity and were for an unsupported SNMP version.
SNMPItem=snmpInGenErrs|R|.1.3.6.1.2.1.11.12.0|41|The total number of SNMP PDUs which were delivered to the SNMP protocol entity and for which the value of the error-status field is `genErr'.
SNMPItem=snmpInGetNexts|R|.1.3.6.1.2.1.11.16.0|41|The total number of SNMP Get-Next PDUs which have been accepted and processed by the SNMP protocol entity.
SNMPItem=snmpInGetRequests|R|.1.3.6.1.2.1.11.15.0|41|The total number of SNMP Get-Request PDUs which have been accepted and processed by the SNMP protocol entity.
SNMPItem=snmpInGetResponses|R|.1.3.6.1.2.1.11.18.0|41|The total number of SNMP Get-Response PDUs which have been accepted and processed by the SNMP protocol entity.
SNMPItem=snmpInNoSuchNames|R|.1.3.6.1.2.1.11.9.0|41|The total number of SNMP PDUs which were delivered to the SNMP protocol entity and for which the value of the error-status field is `noSuchName'.
SNMPItem=snmpInPkts|R|.1.3.6.1.2.1.11.1.0|41|The total number of Messages delivered to the SNMP entity from the transport service.
SNMPItem=snmpInReadOnlys|R|.1.3.6.1.2.1.11.11.0|41|The total number valid SNMP PDUs which were delivered to the SNMP protocol entity and for which the value of the error-status field is `readOnly'. It should be noted that it is a protocol error to generate an SNMP PDU which contains the value `readOnly' in the error-status field, as such this object is provided as a means of detecting incorrect implementations of the SNMP.
SNMPItem=snmpInSetRequests|R|.1.3.6.1.2.1.11.17.0|41|The total number of SNMP Set-Request PDUs which have been accepted and processed by the SNMP protocol entity.
SNMPItem=snmpInTooBigs|R|.1.3.6.1.2.1.11.8.0|41|The total number of SNMP PDUs which were delivered to the SNMP protocol entity and for which the value of the error-status field is `tooBig'.
SNMPItem=snmpInTotalReqVars|R|.1.3.6.1.2.1.11.13.0|41|The total number of MIB objects which have been retrieved successfully by the SNMP protocol entity as the result of receiving valid SNMP Get-Request and Get-Next PDUs.
SNMPItem=snmpInTotalSetVars|R|.1.3.6.1.2.1.11.14.0|41|The total number of MIB objects which have been altered successfully by the SNMP protocol entity as the result of receiving valid SNMP Set-Request PDUs.
SNMPItem=snmpInTraps|R|.1.3.6.1.2.1.11.19.0|41|The total number of SNMP Trap PDUs which have been accepted and processed by the SNMP protocol entity.
SNMPItem=snmpOutBadValues|R|.1.3.6.1.2.1.11.22.0|41|The total number of SNMP PDUs which were generated by the SNMP protocol entity and for which the value of the error-status field is `badValue'.
SNMPItem=snmpOutGenErrs|R|.1.3.6.1.2.1.11.24.0|41|The total number of SNMP PDUs which were generated by the SNMP protocol entity and for which the value of the error-status field is `genErr'.
SNMPItem=snmpOutGetNexts|R|.1.3.6.1.2.1.11.26.0|41|The total number of SNMP Get-Next PDUs which have been generated by the SNMP protocol entity.
SNMPItem=snmpOutGetRequests|R|.1.3.6.1.2.1.11.25.0|41|The total number of SNMP Get-Request PDUs which have been generated by the SNMP protocol entity.
SNMPItem=snmpOutGetResponses|R|.1.3.6.1.2.1.11.28.0|41|The total number of SNMP Get-Response PDUs which have been generated by the SNMP protocol entity.
SNMPItem=snmpOutNoSuchNames|R|.1.3.6.1.2.1.11.21.0|41|The total number of SNMP PDUs which were generated by the SNMP protocol entity and for which the value of the error-status is `noSuchName'.
SNMPItem=snmpOutPkts|R|.1.3.6.1.2.1.11.2.0|41|The total number of SNMP Messages which were passed from the SNMP protocol entity to the transport service.
SNMPItem=snmpOutSetRequests|R|.1.3.6.1.2.1.11.27.0|41|The total number of SNMP Set-Request PDUs which have been generated by the SNMP protocol entity.
SNMPItem=snmpOutTooBigs|R|.1.3.6.1.2.1.11.20.0|41|The total number of SNMP PDUs which were generated by the SNMP protocol entity and for which the value of the error-status field is `tooBig.'
SNMPItem=snmpOutTraps|R|.1.3.6.1.2.1.11.29.0|41|The total number of SNMP Trap PDUs which have been generated by the SNMP protocol entity.

[System]
SNMPItem=sysContact|RW|.1.3.6.1.2.1.1.4.0|04|The textual identification of the contact person for this managed node, together with information on how to contact this person.
SNMPItem=sysDescr|R|.1.3.6.1.2.1.1.1.0|04|A textual description of the entity. This value should include the full name and version identification of the system's hardware type, software operating-system, and networking software. It is mandatory that this only contain printable ASCII characters.
SNMPItem=sysLocation|RW|.1.3.6.1.2.1.1.6.0|04|The physical location of this node (e.g., `telephone closet, 3rd floor').
SNMPItem=sysName|RW|.1.3.6.1.2.1.1.5.0|04|An administratively-assigned name for this managed node. By convention, this is the node's fully-qualified domain name.
SNMPItem=sysObjectID|R|.1.3.6.1.2.1.1.2.0|06|The vendor's authoritative identification of the network management subsystem contained in the entity. This value is allocated within the SMI enterprises subtree (1.3.6.1.4.1) and provides an easy and unambiguous means for determining `what kind of box' is being managed. For example, if vendor `Flintstones, Inc.' was assigned the subtree 1.3.6.1.4.1.4242, it could assign the identifier 1.3.6.1.4.1.4242.1.1 to its `Fred Router'.
SNMPItem=sysServices|R|.1.3.6.1.2.1.1.7.0|02|A value which indicates the set of services that this entity primarily offers. The value is a sum. This sum initially takes the value zero, Then, for each layer, L, in the range 1 through 7, that this node performs transactions for, 2 raised to (L - 1) is added to the sum. For example, a node which performs primarily routing functions would have a value of 4 (2^(3-1)). In contrast, a node which is a host offering application services would have a value of 72 (2^(4-1) + 2^(7-1)). Note that in the context of the Internet suite of protocols, values should be calculated accordingly: layer functionality 1 physical (e.g., repeaters) 2 datalink/subnetwork (e.g., bridges) 3 internet (e.g., IP gateways) 4 end-to-end (e.g., IP hosts) 7 applications (e.g., mail relays) For systems including OSI protocols, layers 5 and 6 may also be counted.
SNMPItem=sysUpTime|R|.1.3.6.1.2.1.1.3.0|43|The time (in hundredths of a second) since the network management portion of the system was last re-initialized.

[TCP]
SNMPItem=tcpActiveOpens|R|.1.3.6.1.2.1.6.5.0|41|The number of times TCP connections have made a direct transition to the SYN-SENT state from the CLOSED state.
SNMPItem=tcpAttemptFails|R|.1.3.6.1.2.1.6.7.0|41|The number of times TCP connections have made a direct transition to the CLOSED state from either the SYN-SENT state or the SYN-RCVD state, plus the number of times TCP connections have made a direct transition to the LISTEN state from the SYN-RCVD state.
SNMPItem=tcpCurrEstab|R|.1.3.6.1.2.1.6.9.0|42|The number of TCP connections for which the current state is either ESTABLISHED or CLOSE- WAIT.
SNMPItem=tcpEstabResets|R|.1.3.6.1.2.1.6.8.0|41|The number of times TCP connections have made a direct transition to the CLOSED state from either the ESTABLISHED state or the CLOSE-WAIT state.
SNMPItem=tcpInErrs|R|.1.3.6.1.2.1.6.14.0|41|The total number of segments received in error (e.g., bad TCP checksums).
SNMPItem=tcpInSegs|R|.1.3.6.1.2.1.6.10.0|41|The total number of segments received, including those received in error. This count includes segments received on currently established connections.
SNMPItem=tcpMaxConn|R|.1.3.6.1.2.1.6.4.0|02|The limit on the total number of TCP connections the entity can support. In entities where the maximum number of connections is dynamic, this object should contain the value -1.
SNMPItem=tcpOutRsts|R|.1.3.6.1.2.1.6.15.0|41|The number of TCP segments sent containing the RST flag.
SNMPItem=tcpOutSegs|R|.1.3.6.1.2.1.6.11.0|41|The total number of segments sent, including those on current connections but excluding those containing only retransmitted octets.
SNMPItem=tcpPassiveOpens|R|.1.3.6.1.2.1.6.6.0|41|The number of times TCP connections have made a direct transition to the SYN-RCVD state from the LISTEN state.
SNMPItem=tcpRetransSegs|R|.1.3.6.1.2.1.6.12.0|41|The total number of segments retransmitted - that is, the number of TCP segments transmitted containing one or more previously transmitted octets.
SNMPItem=tcpRtoAlgorithm|R|.1.3.6.1.2.1.6.1.0|02|The algorithm used to determine the timeout value used for retransmitting unacknowledged octets.
SNMPItem=tcpRtoMax|R|.1.3.6.1.2.1.6.3.0|02|The maximum value permitted by a TCP implementation for the retransmission timeout, measured in milliseconds. More refined semantics for objects of this type depend upon the algorithm used to determine the retransmission timeout. In particular, when the timeout algorithm is rsre(3), an object of this type has the semantics of the UBOUND quantity described in RFC 793.
SNMPItem=tcpRtoMin|R|.1.3.6.1.2.1.6.2.0|02|The minimum value permitted by a TCP implementation for the retransmission timeout, measured in milliseconds. More refined semantics for objects of this type depend upon the algorithm used to determine the retransmission timeout. In particular, when the timeout algorithm is rsre(3), an object of this type has the semantics of the LBOUND quantity described in RFC 793.

[Traps]
Trap=authenticationFailure|GTrap.4||500|An authenticationFailure trap signifies that the SNMP entity, acting in an agent role, has received a protocol message that is not properly authenticated.  While all implementations of the SNMPv2 must be capable of generating this trap, the snmpV2EnableAuthenTraps object indicates whether this trap will be generated.
Trap=coldStart|GTrap.0||500|A coldStart trap signifies that the SNMP entity, acting in an agent role, is reinitializing itself such that its configuration may be altered.
Trap=egpNeighborLoss|GTrap.5||500|An egpNeighborLoss trap signifies that an EGP neighbor has been marked down and the EGP peer relationship no longer obtains.
Trap=linkDown|GTrap.2||500|A linkDown trap signifies that the SNMP entity, acting in an agent role, recognizes a failure in one of the communication links represented in its configuration.
Trap=linkUp|GTrap.3||500|A linkUp trap signifies that the SNMP entity, acting in an agent role, recognizes that one of the communication links represented in its configuration has come up.
Trap=warmStart|GTrap.1||500|A warmStart trap signifies that the SNMP entity, acting in an agent role, is reinitializing itself such that its configuration is unaltered.
Trap=snOsmRmActiveState|STrap.11|.1.3.6.1.4.1.4196.1.1.2.100.2.1|500|Redundancy manager entered active state.
Trap=snOsmRmPassiveState|STrap.12|.1.3.6.1.4.1.4196.1.1.2.100.2.1|500|Redundancy manager entered passive state.
Trap=snOsmStandbyActiveState|STrap.21|.1.3.6.1.4.1.4196.1.1.2.100.2.1|500|Device entered standby active state.
Trap=snOsmStandbyPassiveState|STrap.22|.1.3.6.1.4.1.4196.1.1.2.100.2.1|500|Device entered standby passive state.
Trap=snOsmPowerLineDown|STrap.31|.1.3.6.1.4.1.4196.1.1.2.100.2.1|500|Power down on line <L1/L2>.
Trap=snOsmPowerLineUp|STrap.32|.1.3.6.1.4.1.4196.1.1.2.100.2.1|500|Power up on line <L1/L2>.
Trap=snOsmFault|STrap.41|.1.3.6.1.4.1.4196.1.1.2.100.2.1|500|Device entered fault state.
Trap=snOsmDigitalInput|STrap.51|.1.3.6.1.4.1.4196.1.1.2.100.2.1|500|Digital Input state changed.
Trap=risingAlarm|STrap.1|.1.3.6.1.2.1.16|500|The SNMP trap that is generated when an alarm entry crosses its rising threshold and generates an event that is configured for sending SNMP traps.
Trap=fallingAlarm|STrap.2|.1.3.6.1.2.1.16|500|The SNMP trap that is generated when an alarm entry crosses its falling threshold and generates an event that is configured for sending SNMP traps.

[UDP]
SNMPItem=udpInDatagrams|R|.1.3.6.1.2.1.7.1.0|41|The total number of UDP datagrams delivered to UDP users.
SNMPItem=udpInErrors|R|.1.3.6.1.2.1.7.3.0|41|The number of received UDP datagrams that could not be delivered for reasons other than the lack of an application at the destination port.
SNMPItem=udpNoPorts|R|.1.3.6.1.2.1.7.2.0|41|The total number of received UDP datagrams for which there was no application at the destination port.
SNMPItem=udpOutDatagrams|R|.1.3.6.1.2.1.7.4.0|41|The total number of UDP datagrams sent from this entity.
